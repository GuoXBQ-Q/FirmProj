[main] WARN  firmproj.main.Main - Start Analysing apks/1.apk
[main] WARN  firmproj.main.Main - ---------------------
[main] WARN  firmproj.main.Main - Start Analysing apks/1.apk
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Default: void cancel(java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Default: void cancelAll(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Default: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel: void cancel(java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel: void cancelAll(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Stub$Proxy: void <init>(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancel(java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Stub$Proxy: void cancelAll(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Stub: boolean setDefaultImpl(android.support.v4.app.INotificationSideChannel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.INotificationSideChannel$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteActionCompat: void <init>(androidx.core.app.RemoteActionCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteActionCompat: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteActionCompat: void setEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteActionCompat: void setShouldShowIcon(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: android.content.res.Resources getResources(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTint(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <android.support.v4.media.session.MediaControllerCompat: void removeQueueItemAt(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <android.support.v4.media.session.MediaSessionCompat$Callback: void onRemoveQueueItemAt(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver: void <init>(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver: void <init>(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver: void send(int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.IResultReceiver: void send(int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.KeyEventDispatcher$Component: boolean superDispatchKeyEvent(android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.IResultReceiver$Default: void send(int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.IResultReceiver$Stub$Proxy: void <init>(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.IResultReceiver$Stub$Proxy: void send(int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.IResultReceiver$Stub: boolean setDefaultImpl(android.support.v4.os.IResultReceiver)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver$1: java.lang.Object createFromParcel(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver[] newArray(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver$1: java.lang.Object[] newArray(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver$MyResultReceiver: void <init>(android.support.v4.os.ResultReceiver)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <android.support.v4.os.ResultReceiver$MyRunnable: void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: int getNavigationItemCount()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: int getNavigationMode()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: int getSelectedNavigationIndex()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: int getTabCount()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab newTab()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void removeAllTabs()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void removeTabAt(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void setNavigationMode(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.ActionBar: void setSelectedNavigationItem(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTransaction: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransitionStyle(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: boolean getUserVisibleHint()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: void onAttach(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManager: void enableDebugLogging(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction openTransaction()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: void onRejectSharedElements(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.SharedElementCallback: void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.loader.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerNonConfig getSnapshot()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManagerViewModel: void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbShortTitleRes()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbTitleRes()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback: void onRequestPermissionsResult(int,java.lang.String[],int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator: void validateRequestPermissionsRequestCode(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void dispatchReallyStop()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void doLoaderDestroy()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void doLoaderRetain()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void doLoaderStart()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void doLoaderStop(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: androidx.loader.app.LoaderManager getSupportLoaderManager()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void reportLoaderStart()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: androidx.collection.SimpleArrayMap retainLoaderNonConfig()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentController: java.util.List retainNonConfig()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.collection.SparseArrayCompat: void delete(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void recreate(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.io.File createFilesDir(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.lang.String getAttributionTag(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.io.File getCodeCacheDir(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.io.File[] getObbDirs(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean onActivityResult(android.app.Activity,int,int,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean requestPermissions(android.app.Activity,java.lang.String[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragAndDropPermissionsCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.LocusIdCompat: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.LocusIdCompat: androidx.core.content.LocusIdCompat toLocusIdCompat(android.content.LocusId)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.LocusIdCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: void <init>(android.view.View$AccessibilityDelegate)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void <init>(android.view.accessibility.AccessibilityNodeInfo)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean getBooleanProperty(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCanOpenPopup(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentInvalid(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDismissable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEditable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setInputType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLiveRegion(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMaxTextLength(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMultiLine(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextEntryKey(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextSelection(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setViewIdResourceName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>
[main] WARN  firmproj.main.Main - not match type:Landroid/view/ViewDebug$CapturedViewProperty; method: <androidx.appcompat.view.menu.MenuItemImpl: int getItemId()>
[main] WARN  firmproj.main.Main - not match type:Landroid/view/ViewDebug$CapturedViewProperty; method: <androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider$SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: void <init>(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotation(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationX(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat x(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat xBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat y(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat yBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat z(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat zBy(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenu: void setGroupDividerEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat: void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(int,java.lang.CharSequence,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isHeading()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: void <init>(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: void <init>(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: android.graphics.Region getRegionAt(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String typeToString(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void getBoundsInScreen(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setNumericShortcut(char,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShortcut(char,char,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: void setShowAsAction(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShowAsActionFlags(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider: void subUiVisibilityChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorListener: void onAnimationCancel(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorListener: void onAnimationStart(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorUpdateListener: void onAnimationUpdate(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityViewCommand: boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ActionProvider$VisibilityListener: void onActionProviderVisibilityChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableImageSourceView: void setSupportImageTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableImageSourceView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeWithDefaults(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: char charAt(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$FontCallback: android.os.Handler getHandler(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrievalFailed(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrieved(android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getCachedFont(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: float getFloat(android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: int clamp(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void doScrollY(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean inChild(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void addView(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void addView(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean arrowScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void fling(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean fullScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onMeasure(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean pageScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void scrollTo(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void setFillViewport(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView: void stopNestedScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent3: void onNestedScroll(android.view.View,int,int,int,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild3: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: void <init>(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: void onStopNestedScroll(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$SavedState: void <init>(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$SavedState: void <init>(android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$SavedState: void writeToParcel(android.os.Parcel,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent2: void onNestedPreScroll(android.view.View,int,int,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent2: void onNestedScroll(android.view.View,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent2: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent2: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent2: void onStopNestedScroll(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild2: boolean dispatchNestedPreScroll(int,int,int[],int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild2: boolean dispatchNestedScroll(int,int,int,int,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild2: boolean hasNestedScrollingParent(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild2: boolean startNestedScroll(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild2: void stopNestedScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent: boolean onNestedFling(android.view.View,float,float,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent: boolean onNestedPreFling(android.view.View,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent: void onNestedPreScroll(android.view.View,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent: void onNestedScroll(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingParent: void onStopNestedScroll(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild: boolean dispatchNestedFling(float,float,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreFling(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreScroll(int,int,int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild: boolean dispatchNestedScroll(int,int,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild: void setNestedScrollingEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.NestedScrollingChild: boolean startNestedScroll(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder 'from'(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder 'from'(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.TaskStackBuilder: android.content.Intent getIntent(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: android.content.Intent getIntent(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: void <init>(android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: void <init>(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getMandatorySystemGestureInsets()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getStableInsetBottom()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getStableInsetLeft()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getStableInsetRight()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getStableInsetTop()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getStableInsets()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getSystemGestureInsets()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getSystemWindowInsets()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getTappableElementInsets()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: boolean hasStableInsets()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: boolean hasSystemWindowInsets()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: boolean isVisible(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: void setRootViewData(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat: void setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: void <init>(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: void <init>(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets add(androidx.core.graphics.Insets,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets min(androidx.core.graphics.Insets,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets of(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets subtract(androidx.core.graphics.Insets,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets wrap(android.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: androidx.core.graphics.Insets wrap(android.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.Insets: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCutoutCompat: void <init>(android.graphics.Rect,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCutoutCompat: void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCutoutCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCutoutCompat: android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCutoutCompat: androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableCompoundButton: void setSupportButtonTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableCompoundButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationEnd(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.TintAwareDrawable: void setTint(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.collection.LongSparseArray: void delete(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser$PathDataNode: void <init>(char,float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser$PathDataNode: void <init>(androidx.core.graphics.PathParser$PathDataNode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListViewAutoScrollHelper: void <init>(android.widget.ListView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: void <init>(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: int constrain(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: boolean canTargetScrollHorizontally(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: boolean canTargetScrollVertically(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: void scrollTargetBy(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setExclusive(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper$ClampedScroller: float getValueAt(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper$ClampedScroller: float interpolateValue(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.cursoradapter.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.cursoradapter.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.cursoradapter.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pools$SynchronizedPool: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pools$SimplePool: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pools$Pool: boolean release(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.browser.browseractions.BrowserActionsIntent: java.lang.String getCreatorPackageName(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: int modeToMode(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider$PathStrategy: android.net.Uri getUriForFile(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.browser.customtabs.CustomTabsSession: boolean setToolbarItem(int,android.graphics.Bitmap,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.browser.customtabs.CustomTabsIntent$Builder: androidx.browser.customtabs.CustomTabsIntent$Builder addToolbarItem(int,android.graphics.Bitmap,java.lang.String,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.browser.customtabs.TrustedWebUtils: void launchAsTrustedWebActivity(android.content.Context,androidx.browser.customtabs.CustomTabsIntent,android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <androidx.collection.LongSparseArrayKt: boolean remove(androidx.collection.LongSparseArray,long,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <androidx.collection.SparseArrayKt: boolean remove(androidx.collection.SparseArrayCompat,int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.constraintlayout.motion.widget.MotionLayout: void rebuildMotion()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String capabilityToString(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String feedbackTypeToString(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String flagToString(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$1: void <init>(java.lang.String[],android.app.Activity,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$2: void <init>(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$Api30Impl: void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void <init>(androidx.core.app.SharedElementCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onMapSharedElements(java.util.List,java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onRejectSharedElements(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementStart(java.util.List,java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl: void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void <init>(android.app.ActivityOptions)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void requestUsageTimeReport(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void update(androidx.core.app.ActivityOptionsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: void requestUsageTimeReport(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityOptionsCompat: void update(androidx.core.app.ActivityOptionsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pair: void <init>(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pair: androidx.core.util.Pair create(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Pair: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$1: void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator: boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void <init>(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityDestroyed(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityPaused(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityResumed(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStarted(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStopped(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$2: void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ActivityRecreator$3: void <init>(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AlarmManagerCompat: void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AlarmManagerCompat: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppComponentFactory: android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.AppLaunchChecker: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppLaunchChecker: boolean hasStartedFromLauncher(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppLaunchChecker: void onActivityCreate(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppOpsManagerCompat: int noteOp(android.content.Context,java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppOpsManagerCompat: int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.BundleCompat$BundleCompatBaseImpl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.BundleCompat$BundleCompatBaseImpl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.BundleCompat: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void <init>(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void addDurationItem(android.util.SparseIntArray,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: void add(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl: android.util.SparseIntArray[] remove(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator: void add(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] remove(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CommandProcessor: void <init>(androidx.core.app.JobIntentService)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CommandProcessor: java.lang.Object doInBackground(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CommandProcessor: java.lang.Void doInBackground(java.lang.Void[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CommandProcessor: void onCancelled(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CommandProcessor: void onCancelled(java.lang.Void)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Void)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: void ensureProcessorRunningLocked(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: android.os.IBinder onBind(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: void onHandleWork(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService: void setInterruptIfStopped(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$WorkEnqueuer: void <init>(android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$WorkEnqueuer: void enqueueWork(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$WorkEnqueuer: void ensureJobId(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CompatWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CompatWorkEnqueuer: void enqueueWork(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$CompatWorkItem: void <init>(androidx.core.app.JobIntentService,android.content.Intent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean onStartJob(android.app.job.JobParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$JobServiceEngineImpl: boolean onStopJob(android.app.job.JobParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setConversationId(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setDescription(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setGroup(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setImportance(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setLightColor(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setLightsEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setName(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setShowBadge(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setSound(android.net.Uri,android.media.AudioAttributes)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setVibrationEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat$Builder: androidx.core.app.NotificationChannelCompat$Builder setVibrationPattern(long[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat: void <init>(android.app.NotificationChannel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelCompat: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelGroupCompat$Builder: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelGroupCompat$Builder: androidx.core.app.NotificationChannelGroupCompat$Builder setDescription(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelGroupCompat$Builder: androidx.core.app.NotificationChannelGroupCompat$Builder setName(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelGroupCompat: void <init>(android.app.NotificationChannelGroup)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelGroupCompat: void <init>(android.app.NotificationChannelGroup,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelGroupCompat: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationChannelGroupCompat: java.util.List getChannelsCompat(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: int getActionCount(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getAutoCancel(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.String getCategory(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: int getColor(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.CharSequence getContentInfo(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.CharSequence getContentText(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.CharSequence getContentTitle(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.String getGroup(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getHighPriority(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.util.List getInvisibleActions(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: androidx.core.content.LocusIdCompat getLocusId(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getOngoing(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getOnlyAlertOnce(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.util.List getPeople(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: android.app.Notification getPublicVersion(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.CharSequence getSettingsText(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getShowWhen(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.String getSortKey(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: java.lang.CharSequence getSubText(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean getUsesChronometer(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: int getVisibility(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Action: int getIcon()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata: void <init>(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata: void setFlags(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,int,android.os.Bundle,java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: androidx.core.app.RemoteInput fromPlatform(android.app.RemoteInput)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: java.lang.String getExtraResultsKeyForData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: void <init>(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setContextual(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$Extender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: void <init>(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: void setFlag(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getCancelLabel()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getConfirmLabel()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getInProgressLabel()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: void <init>(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.graphics.drawable.IconCompat asIconCompat(android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: void clearCompatExtraKeys(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: void restoreFromCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: float constrain(float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructCompatStyleByName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructCompatStyleByPlatformName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructCompatStyleForBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style constructStyleForExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createIconWithBackground(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Style extractStyleFromNotification(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: void hideNormalContent(android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: void clearCompatExtraKeys(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: void restoreFromCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: void <init>(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtrasWithoutDuplicateData(android.app.Notification,androidx.core.app.NotificationCompat$Style)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(androidx.core.app.Person)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Builder: android.app.Notification getNotification()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAllowSystemGeneratedContextualActions(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setBadgeIconType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setBubbleMetadata(androidx.core.app.NotificationCompat$BubbleMetadata)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChronometerCountDown(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColorized(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDefaults(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLights(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocusId(androidx.core.content.LocusIdCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNotificationSilent()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNumber(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSettingsText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutInfo(androidx.core.content.pm.ShortcutInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSilent(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVibrate(long[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVisibility(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person: void <init>(androidx.core.app.Person$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person: androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$Extender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat: java.util.List fromShortcuts(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat getLocusId(android.content.pm.ShortcutInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat: androidx.core.content.LocusIdCompat getLocusIdFromExtra(android.os.PersistableBundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat: boolean getLongLivedFromExtra(android.os.PersistableBundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person$Builder: void <init>(androidx.core.app.Person)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setBot(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setImportant(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setKey(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setName(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setUri(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: void <init>(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: void addCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: void clearCompatExtraKeys(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: void restoreFromCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: void <init>(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setFlag(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setAutoExpandBubble(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDeleteIntent(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeight(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeightResId(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIcon(androidx.core.graphics.drawable.IconCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIntent(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setSuppressNotification(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: void <init>(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender: void <init>(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setColor(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: java.util.List getNonContextualActions(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$InboxStyle: void <init>(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$InboxStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$InboxStyle: void clearCompatExtraKeys(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$InboxStyle: void restoreFromCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: void <init>(java.lang.CharSequence,long,androidx.core.app.Person)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle[] getBundleArrayForMessages(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: java.util.List getMessagesFromBundleArray(android.os.Parcelable[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getSender()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: void <init>(androidx.core.app.Person)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$MessagingStyle: void <init>(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: void <init>(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: android.text.style.TextAppearanceSpan makeFontColorSpan(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: void addCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addHistoricMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: void clearCompatExtraKeys(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getUserDisplayName()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: void <init>(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: void setFlag(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearPages()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: android.graphics.Bitmap getBackground()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: int getContentIcon()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: int getContentIconGravity()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: int getCustomContentHeight()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: int getCustomSizePreset()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: android.app.PendingIntent getDisplayIntent()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: int getGravity()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAmbientBigPicture()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAvoidBackgroundClipping()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: boolean getHintHideIcon()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: int getHintScreenTimeout()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: boolean getHintShowBackgroundOnly()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: java.util.List getPages()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentAction(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setGravity(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setGravity(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatBuilder: java.util.List combineLists(java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatBuilder: java.util.List getPeople(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatBuilder: void removeSoundAndVibration(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput fromBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: int getActionCount(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: java.lang.Object[] getActionObjectsLocked(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void <init>(androidx.core.app.NotificationCompatSideChannelService)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void cancel(java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void cancelAll(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService: void checkPermission(int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationCompatSideChannelService: android.os.IBinder onBind(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$CancelTask: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$CancelTask: void <init>(java.lang.String,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$CancelTask: void send(android.support.v4.app.INotificationSideChannel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$Task: void send(android.support.v4.app.INotificationSideChannel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat 'from'(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void cancel(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void cancel(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(androidx.core.app.NotificationChannelCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(androidx.core.app.NotificationChannelGroupCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroupsCompat(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelsCompat(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void deleteUnlistedNotificationChannels(java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationChannelCompat getNotificationChannelCompat(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationChannelCompat getNotificationChannelCompat(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationChannelGroupCompat getNotificationChannelGroupCompat(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceDisconnected(android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager: void queueTask(androidx.core.app.NotificationManagerCompat$Task)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: void <init>(android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$NotifyTask: void <init>(java.lang.String,int,java.lang.String,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$NotifyTask: void send(android.support.v4.app.INotificationSideChannel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: void <init>(android.content.ComponentName,android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput$Builder: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setEditChoicesBeforeSending(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$Api16Impl: void migrateExtraStreamToClipData(android.content.Intent,java.util.ArrayList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$Api16Impl: void removeClipData(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.ShareCompat: void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat: void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.ShareCompat: void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat: void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat: android.content.ComponentName getCallingActivity(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat: java.lang.String getCallingPackage(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.util.ArrayList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder 'from'(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder 'from'(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentReader: void <init>(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentReader: void <init>(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.app.ShareCompat$IntentReader: androidx.core.app.ShareCompat$IntentReader 'from'(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentReader: androidx.core.app.ShareCompat$IntentReader 'from'(android.app.Activity)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentReader: void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContentProviderCompat: android.content.Context requireContext(android.content.ContentProvider)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContentResolverCompat: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.ContextCompat$Api30Impl: java.lang.String getAttributionTag(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider$SimplePathStrategy: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.FileProvider$SimplePathStrategy: android.net.Uri getUriForFile(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.IntentCompat: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.LocusIdCompat$Api29Impl: android.content.LocusId create(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.LocusIdCompat$Api29Impl: java.lang.String getId(android.content.LocusId)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String[],java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.MimeTypeFilter: boolean matches(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.MimeTypeFilter: java.lang.String[] matchesMany(java.lang.String[],java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.MimeTypeFilter: boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper: void apply(android.content.SharedPreferences$Editor)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.content.SharedPreferencesCompat$EditorCompat: void apply(android.content.SharedPreferences$Editor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.SharedPreferencesCompat$EditorCompat: void apply(android.content.SharedPreferences$Editor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat: boolean byteArrayContains(byte[][],byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat: byte[] computeSHA256Digest(byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat: java.util.List getSignatures(android.content.pm.PackageManager,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PackageInfoCompat: boolean hasSignatures(android.content.pm.PackageManager,java.lang.String,java.util.Map,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutAdded(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutRemoved(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutUpdated(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoChangeListener: void onShortcutUsageReported(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(androidx.core.content.pm.ShortcutInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder addCapabilityBinding(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder addCapabilityBinding(java.lang.String,java.lang.String,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setExtras(android.os.PersistableBundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLocusId(androidx.core.content.LocusIdCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setRank(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setSliceUri(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object addShortcuts(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void addShortcuts(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object removeShortcuts(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void removeShortcuts(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object addShortcuts(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object removeShortcuts(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat$1: void <init>(android.content.IntentSender)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat$1: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean convertUriIconToBitmapIcon(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void convertUriIconsToBitmapIcons(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void disableShortcuts(android.content.Context,java.util.List,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void enableShortcuts(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: int getIconDimensionInternal(android.content.Context,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxHeight(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: int getIconMaxWidth(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: java.lang.String getShortcutInfoCompatWithLowestRank(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcutInfoListeners(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: androidx.core.content.pm.ShortcutInfoCompatSaver getShortcutInfoSaverInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: java.util.List getShortcuts(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRateLimitingActive(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void removeLongLivedShortcuts(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void reportShortcutUsed(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean setDynamicShortcuts(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void setShortcutInfoChangeListeners(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: void setShortcutInfoCompatSaver(androidx.core.content.pm.ShortcutInfoCompatSaver)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.pm.ShortcutManagerCompat$Api25Impl: java.lang.String getShortcutInfoWithLowestRank(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: void <init>(android.graphics.Shader,android.content.res.ColorStateList,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat 'from'(android.graphics.Shader)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ComplexColorCompat: void setColor(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ConfigurationHelper: int getDensityDpi(android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: void <init>(java.lang.String,int,boolean,java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: void <init>(androidx.core.provider.FontRequest,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequest: java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.provider.FontRequest: java.lang.String getIdentifier()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat$ColorStops: void <init>(java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: long[] append(long[],int,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: boolean[] append(boolean[],int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: int growSize(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: int[] insert(int[],int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: long[] insert(long[],int,int,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.GrowingArrayUtils: boolean[] insert(boolean[],int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: void <init>(android.content.res.ColorStateList,android.content.res.Configuration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$FontCallback$1: void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$FontCallback$2: void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$ImplApi29: float getFloat(android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: void rebase(android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: int getAttr(android.content.Context,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: boolean getBoolean(android.content.res.TypedArray,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: int getInt(android.content.res.TypedArray,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: int getResourceId(android.content.res.TypedArray,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: java.lang.String getString(android.content.res.TypedArray,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence getText(android.content.res.TypedArray,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.database.DatabaseUtilsCompat: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.database.DatabaseUtilsCompat: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.database.DatabaseUtilsCompat: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.database.DatabaseUtilsCompat: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BitmapCompat: int getAllocationByteCount(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BitmapCompat: void setHasMipMap(android.graphics.Bitmap,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BlendModeColorFilterCompat: android.graphics.ColorFilter createBlendModeColorFilterCompat(int,androidx.core.graphics.BlendModeCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BlendModeCompat: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BlendModeCompat: androidx.core.graphics.BlendModeCompat valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BlendModeUtils: android.graphics.BlendMode obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.BlendModeUtils: android.graphics.PorterDuff$Mode obtainPorterDuffFromCompat(androidx.core.graphics.BlendModeCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int HSLToColor(float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int LABToColor(double,double,double)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int blendARGB(int,int,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void blendHSL(float[],float[],float,float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void blendLAB(double[],double[],double,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: double calculateContrast(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: double calculateLuminance(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int calculateMinimumAlpha(int,int,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: float circularInterpolate(float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void colorToHSL(int,float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void colorToLAB(int,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: void colorToXYZ(int,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int compositeColors(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: float constrain(float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int constrain(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: double distanceEuclidean(double[],double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: double pivotXyzComponent(double)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PaintCompat: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathSegment: void <init>(android.graphics.PointF,float,android.graphics.PointF,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathSegment: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void <init>(androidx.core.content.res.ResourcesCompat$FontCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRequestFailed(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRetrieved(android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRequestFailed(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRetrieved(android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: java.lang.String createResourceUid(android.content.res.Resources,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getSystemFontFamily(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat: android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat: void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.provider.FontsContractCompat: void resetCache()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: long getUniqueKey(android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.provider.FontsContractCompat$FontInfo: void <init>(android.net.Uri,int,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat$FontInfo: void <init>(android.net.Uri,int,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.provider.FontsContractCompat$FontFamilyResult: void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat$FontFamilyResult: void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor: int getWeight(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor: boolean isItalic(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi21Impl: boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi24Impl: boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatApi29Impl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$1: void <init>(androidx.core.graphics.TypefaceCompatBaseImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$2: void <init>(androidx.core.graphics.TypefaceCompatBaseImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.TypefaceCompatUtil: java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable21: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable21: void getOutline(android.graphics.Outline)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable21: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable21: void setMipMap(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean isGreaterThanZero(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void draw(android.graphics.Canvas)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void onBoundsChange(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAlpha(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAntiAlias(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCircular(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCornerRadius(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setDither(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setFilterBitmap(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setGravity(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setMipMap(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.graphics.Canvas)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable: void setMipMap(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawable: void setWrappedDrawable(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean getPadding(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateDrawable(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void onBoundsChange(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLayoutDirectionChanged(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLevelChange(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setFilterBitmap(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableState: void <init>(androidx.core.graphics.drawable.WrappedDrawableState)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.display.DisplayManagerCompat: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.display.DisplayManagerCompat: androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.display.DisplayManagerCompat: android.view.Display getDisplay(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationError(int,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationHelp(int,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat 'from'(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(java.security.Signature)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(javax.crypto.Cipher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: void <init>(javax.crypto.Mac)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem$-CC: android.view.MenuItem $default$setContentDescription(androidx.core.internal.view.SupportMenuItem,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.internal.view.SupportMenuItem$-CC: android.view.MenuItem $default$setTooltipText(androidx.core.internal.view.SupportMenuItem,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat$Callback: void onFirstFix(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat$Callback: void onSatelliteStatusChanged(androidx.core.location.GnssStatusCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: androidx.core.location.GnssStatusCompat wrap(android.location.GnssStatus)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: androidx.core.location.GnssStatusCompat wrap(android.location.GpsStatus)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: float getAzimuthDegrees(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: float getBasebandCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: float getCarrierFrequencyHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: float getCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: int getConstellationType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: float getElevationDegrees(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: int getSvid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: boolean hasAlmanacData(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: boolean hasBasebandCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: boolean hasCarrierFrequencyHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: boolean hasEphemerisData(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusCompat: boolean usedInFix(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: void <init>(android.location.GnssStatus)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: float getAzimuthDegrees(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: float getBasebandCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: float getCarrierFrequencyHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: float getCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: int getConstellationType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: float getElevationDegrees(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: int getSvid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: boolean hasAlmanacData(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: boolean hasBasebandCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: boolean hasCarrierFrequencyHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: boolean hasEphemerisData(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GnssStatusWrapper: boolean usedInFix(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: void <init>(android.location.GpsStatus)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: int getConstellationFromPrn(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: android.location.GpsSatellite getSatellite(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: int getSvidFromPrn(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: float getAzimuthDegrees(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: float getBasebandCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: float getCarrierFrequencyHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: float getCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: int getConstellationType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: float getElevationDegrees(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: int getSvid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: boolean hasAlmanacData(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: boolean hasBasebandCn0DbHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: boolean hasCarrierFrequencyHz(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: boolean hasEphemerisData(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.GpsStatusWrapper: boolean usedInFix(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationCompat$Api17Impl: long getElapsedRealtimeNanos(android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationCompat: long getElapsedRealtimeMillis(android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationCompat: long getElapsedRealtimeNanos(android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationCompat: boolean isMock(android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationCompat: void setMock(android.location.Location,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationCompat$Api18Impl: boolean isMock(android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$1: void <init>(androidx.core.util.Consumer,android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: void getCurrentLocation(android.location.LocationManager,java.lang.String,androidx.core.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: java.lang.String getGnssHardwareModelName(android.location.LocationManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: int getGnssYearOfHardware(android.location.LocationManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: boolean registerGnssStatusCallback(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat: void unregisterGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Consumer: void accept(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$2: void <init>(androidx.core.location.LocationManagerCompat$CancellableLocationListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener: void <init>(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.util.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onLocationChanged(android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onProviderDisabled(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onProviderEnabled(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener: void startTimeout(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$3: void <init>(android.location.LocationManager,androidx.core.location.LocationManagerCompat$GpsStatusTransport)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void <init>(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void onGpsStatusChanged(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GpsStatusTransport: void register(java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$Api28Impl: java.lang.String getGnssHardwareModelName(android.location.LocationManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$Api28Impl: int getGnssYearOfHardware(android.location.LocationManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$Api28Impl: boolean isLocationEnabled(android.location.LocationManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$Api30Impl$1: void <init>(androidx.core.util.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$Api30Impl$1: void accept(android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$Api30Impl$1: void accept(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$Api30Impl: void getCurrentLocation(android.location.LocationManager,java.lang.String,androidx.core.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener$1: void <init>(androidx.core.location.LocationManagerCompat$CancellableLocationListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$CancellableLocationListener$2: void <init>(androidx.core.location.LocationManagerCompat$CancellableLocationListener,androidx.core.util.Consumer,android.location.Location)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GnssStatusTransport: void <init>(androidx.core.location.GnssStatusCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GnssStatusTransport: void onFirstFix(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GpsStatusTransport$1: void <init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GpsStatusTransport$2: void <init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GpsStatusTransport$3: void <init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$GpsStatusTransport$4: void <init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void <init>(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$InlineHandlerExecutor: void execute(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$1: void <init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void <init>(androidx.core.location.GnssStatusCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onFirstFix(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void onSatelliteStatusChanged(android.location.GnssStatus)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport: void register(java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$2: void <init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$3: void <init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$4: void <init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor,android.location.GnssStatus)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.math.MathUtils: double clamp(double,double,double)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.math.MathUtils: float clamp(float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.math.MathUtils: int clamp(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.math.MathUtils: long clamp(long,long,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void <init>(java.net.DatagramSocket,java.io.FileDescriptor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void accept(java.net.SocketImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void bind(java.net.InetAddress,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.net.InetAddress,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void connect(java.net.SocketAddress,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void create(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: java.lang.Object getOption(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void listen(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void sendUrgentData(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper: void setOption(int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.DatagramSocketWrapper: void <init>(java.net.DatagramSocket,java.io.FileDescriptor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.MailTo: boolean isMailTo(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.MailTo: boolean isMailTo(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.MailTo: androidx.core.net.MailTo parse(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.MailTo: androidx.core.net.MailTo parse(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.ParseException: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.net.TrafficStatsCompat: void clearThreadStatsTag()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.net.TrafficStatsCompat: int getThreadStatsTag()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.net.TrafficStatsCompat: void setThreadStatsTag(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.TrafficStatsCompat: void setThreadStatsTag(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.net.TrafficStatsCompat: void tagSocket(java.net.Socket)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.TrafficStatsCompat: void tagSocket(java.net.Socket)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.net.TrafficStatsCompat: void untagSocket(java.net.Socket)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.TrafficStatsCompat: void untagSocket(java.net.Socket)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.net.UriCompat: java.lang.String toSafeString(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.BuildCompat: boolean isAtLeastN()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.BuildCompat: boolean isAtLeastNMR1()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.BuildCompat: boolean isAtLeastO()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.BuildCompat: boolean isAtLeastOMR1()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.BuildCompat: boolean isAtLeastP()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.BuildCompat: boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.BuildCompat: boolean isAtLeastQ()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.BuildCompat: boolean isAtLeastR()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: void <init>(androidx.core.os.LocaleListInterface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: java.util.Locale forLanguageTagCompat(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(android.os.LocaleList)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: java.util.Locale get(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListInterface: java.util.Locale get(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListInterface: java.util.Locale getFirstMatch(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListInterface: int indexOf(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ExecutorCompat$HandlerExecutor: void <init>(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ExecutorCompat$HandlerExecutor: void execute(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat$Api28Impl: android.os.Handler createAsync(android.os.Looper)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat$Api28Impl: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat$Api28Impl: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat: boolean hasCallbacks(android.os.Handler,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.HandlerCompat$Api29Impl: boolean hasCallbacks(android.os.Handler,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: void <init>(java.util.Locale[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: java.util.Locale computeFirstMatch(java.util.Collection,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: int computeFirstMatchIndex(java.util.Collection,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: int findFirstMatchIndex(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: java.lang.String getLikelyScript(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: boolean isPseudoLocale(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: int matchScore(java.util.Locale,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: void toLanguageTag(java.lang.StringBuilder,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: java.util.Locale get(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: java.util.Locale getFirstMatch(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListCompatWrapper: int indexOf(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListPlatformWrapper: void <init>(android.os.LocaleList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListPlatformWrapper: java.util.Locale getFirstMatch(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.LocaleListPlatformWrapper: int indexOf(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.OperationCanceledException: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelCompat: boolean readBoolean(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelCompat: void writeBoolean(android.os.Parcel,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: void <init>(androidx.core.os.ParcelableCompatCreatorCallbacks)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2: java.lang.Object[] newArray(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object[] newArray(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ProcessCompat$Api16Impl: boolean isApplicationUid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ProcessCompat: boolean isApplicationUid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ProcessCompat$Api17Impl: boolean isApplicationUid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.ProcessCompat$Api24Impl: boolean isApplicationUid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.TraceCompat: void beginAsyncSection(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.TraceCompat: void beginSection(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.TraceCompat: void endAsyncSection(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.TraceCompat: void setCounter(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <androidx.core.os.TraceKt: java.lang.Object trace(java.lang.String,kotlin.jvm.functions.Function0)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.UserHandleCompat$Api24Impl: android.os.UserHandle getUserHandleForUid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.UserHandleCompat: android.os.UserHandle getUserHandleForUid(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.CallbackWithHandler$1: void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.CallbackWithHandler: void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.CallbackWithHandler: void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.CallbackWithHandler: void onTypefaceRequestFailed(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.CallbackWithHandler: void onTypefaceRetrieved(android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$TypefaceResult: void <init>(android.graphics.Typeface)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker: java.lang.String createCacheId(androidx.core.provider.FontRequest,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker: int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker: androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.CallbackWithHandler$2: void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider$1: int compare(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider$1: int compare(byte[],byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$1: void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$2: void <init>(androidx.core.provider.CallbackWithHandler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$2: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$2: void accept(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$3: void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$4: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$4: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.FontRequestWorker$4: void accept(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: void <init>(java.lang.Runnable,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor$DefaultThreadFactory: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor: java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor: java.util.concurrent.Executor createHandlerExecutor(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor: void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor: java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor$HandlerExecutor: void <init>(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor$HandlerExecutor: void execute(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor$ReplyRunnable$1: void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.RequestExecutor$ReplyRunnable: void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread$1: void <init>(androidx.core.provider.SelfDestructiveThread)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread: void <init>(java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread: void post(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread$ReplyCallback: void onReply(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread$2$1: void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread$2: void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.provider.SelfDestructiveThread$3: void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.SubscriptionManagerCompat$Api29Impl: int getSlotIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.SubscriptionManagerCompat: int getSlotIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.TelephonyManagerCompat$Api23Impl: java.lang.String getDeviceId(android.telephony.TelephonyManager,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.TelephonyManagerCompat: java.lang.String getImei(android.telephony.TelephonyManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.TelephonyManagerCompat: int getSubscriptionId(android.telephony.TelephonyManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.TelephonyManagerCompat$Api26Impl: java.lang.String getImei(android.telephony.TelephonyManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.TelephonyManagerCompat$Api30Impl: int getSubscriptionId(android.telephony.TelephonyManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$Builder: void <init>(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$Builder: void <init>(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$Builder: void initialize(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder stereoReset(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: int getEntryDir(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: int getExitDir(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: boolean isRtl(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: boolean isRtl(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(char[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.CharSequence,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.BidiFormatter$DirectionalityEstimator: byte getCachedDirectionality(char)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.ICUCompat: java.lang.String addLikelySubtags(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.ICUCompat: java.lang.String getScript(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.ICUCompat: java.lang.String maximizeAndGetScript(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params$Builder: void <init>(android.text.TextPaint)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback: void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask: void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: void <init>(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong: int checkRtl(java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat: int isRtlText(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat: int isRtlTextOrFormat(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong: int checkRtl(java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean doCheck(java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl: boolean isRtl(char[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal: void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromFirstChar(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.TextUtilsCompat: java.lang.String htmlEncode(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress$ZipRange: void <init>(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress$ZipRange: boolean matches(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: int attemptMatch(java.lang.String,java.util.regex.MatchResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: boolean checkHouseNumber(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: java.lang.String findAddress(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: boolean isValidLocationName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: java.util.regex.MatchResult matchHouseNumber(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.FindAddress: java.util.regex.MatchResult matchState(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat$1: int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat$1: int compare(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void addLinkMovementMethod(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void applyLink(java.lang.String,int,int,android.text.Spannable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: java.lang.String findAddress(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void gatherMapLinks(java.util.ArrayList,android.text.Spannable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.text.util.LinkifyCompat: void pruneOverlaps(java.util.ArrayList,android.text.Spannable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.AtomicFile: void <init>(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.AtomicFile: void rename(java.io.File,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.AtomicFile: boolean sync(java.io.FileOutputStream)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.AtomicFile: void failWrite(java.io.FileOutputStream)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.LogWriter: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.LogWriter: void write(char[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.ObjectsCompat: int hashCode(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.ObjectsCompat: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.ObjectsCompat: java.lang.String toString(java.lang.Object,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: void checkArgument(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: int checkArgumentNonnegative(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: int checkFlagsArgument(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: void checkState(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.Predicate: boolean test(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.TimeUtils: int accumField(int,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.TimeUtils: int formatDurationLocked(long,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.util.TimeUtils: int printField(char[],int,char,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void <init>(androidx.core.view.AccessibilityDelegateCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEvent(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat$Builder: void <init>(android.content.ClipData,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat$Builder: void <init>(androidx.core.view.ContentInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setClip(android.content.ClipData)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setFlags(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setSource(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat: void <init>(androidx.core.view.ContentInfoCompat$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat: android.content.ClipData buildClipData(android.content.ClipDescription,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat: java.lang.String flagsToString(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat: java.lang.String sourceToString(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ContentInfoCompat: android.util.Pair partition(androidx.core.util.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: android.graphics.Point getCurrentDisplaySizeFromWorkarounds(android.content.Context,android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: android.graphics.Point getDisplaySize(android.content.Context,android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat getMode(android.content.Context,android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: java.lang.String getSystemProperty(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: boolean isCurrentModeTheLargestMode(android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: boolean isSonyBravia4kTv(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: boolean isTv(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: android.graphics.Point parseDisplaySize(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat: android.graphics.Point parsePhysicalDisplaySizeFromSystemProperties(java.lang.String,android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.graphics.Point)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,android.graphics.Point)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.DisplayCompat$ModeCompat: boolean isNative()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$Api23Impl: androidx.core.view.DisplayCompat$ModeCompat getMode(android.content.Context,android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$Api23Impl: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$Api23Impl: boolean isCurrentModeTheLargestMode(android.view.Display)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$Api23Impl: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DisplayCompat$Api23Impl: boolean physicalSizeEquals(android.view.Display$Mode,android.view.Display$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper$1: void <init>(androidx.core.view.DragStartHelper)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper$1: boolean onLongClick(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper: void <init>(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper: void getTouchPosition(android.graphics.Point)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper: boolean onLongClick(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper$OnDragStartListener: boolean onDragStart(android.view.View,androidx.core.view.DragStartHelper)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper$2: void <init>(androidx.core.view.DragStartHelper)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.DragStartHelper$2: boolean onTouch(android.view.View,android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl: boolean onTouchEvent(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl: void setIsLongpressEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat: void setIsLongpressEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler: void handleMessage(android.os.Message)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void init(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: boolean onTouchEvent(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void setIsLongpressEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: boolean onTouchEvent(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: void setIsLongpressEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GravityCompat: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: void <init>(androidx.core.view.LayoutInflaterFactory)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterCompat$Factory2Wrapper: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.LayoutInflaterCompat: androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterCompat: androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.LayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MarginLayoutParamsCompat: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuCompat: void setShowAsAction(android.view.MenuItem,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuCompat: void setShowAsAction(android.view.MenuItem,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat$1: void <init>(androidx.core.view.MenuItemCompat$OnActionExpandListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat$1: boolean onMenuItemActionCollapse(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat$1: boolean onMenuItemActionExpand(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: boolean collapseActionView(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: boolean collapseActionView(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: boolean expandActionView(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: boolean expandActionView(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: boolean isActionViewExpanded(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: boolean isActionViewExpanded(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: int getButtonState(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: int getButtonState(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: int getSource(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: int getSource(android.view.MotionEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.OnReceiveContentListener: androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.OnReceiveContentViewBehavior: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.OneShotPreDrawListener: void <init>(android.view.View,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.PointerIconCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(java.lang.Object,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(java.lang.Object,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$1: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: int combineMeasuredStates(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int combineMeasuredStates(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void compatOffsetLeftAndRight(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void compatOffsetTopAndBottom(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void enableAccessibleClickableSpanSupport(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: java.util.List getActionList(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getAlpha(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getAlpha(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getElevation(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getLabelFor(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: int getLayerType(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getLayerType(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: android.graphics.Matrix getMatrix(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.graphics.Matrix getMatrix(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: int getMeasuredHeightAndState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getMeasuredHeightAndState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: int getMeasuredState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getMeasuredState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: java.lang.String[] getOnReceiveContentMimeTypes(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: int getOverScrollMode(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getOverScrollMode(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getPivotX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getPivotX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getPivotY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getPivotY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getRotation(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getRotation(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getRotationX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getRotationX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getRotationY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getRotationY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getScaleX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getScaleX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getScaleY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getScaleY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: java.lang.CharSequence getStateDescription(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: java.util.List getSystemGestureExclusionRects(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getTranslationX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getTranslationX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getTranslationY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getTranslationY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getTranslationZ(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getX(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: float getY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getY(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: float getZ(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean hasAccessibilityDelegate(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: boolean isOpaque(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isOpaque(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void jumpDrawablesToCurrentState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void jumpDrawablesToCurrentState(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void removeAccessibilityAction(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void removeActionWithId(int,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: int resolveSizeAndState(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: int resolveSizeAndState(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setAccessibilityHeading(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setActivated(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setActivated(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setAlpha(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setAlpha(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setHasTransientState(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setLabelFor(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setLayerPaint(android.view.View,android.graphics.Paint)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setLayoutDirection(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setOverScrollMode(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setOverScrollMode(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setPivotX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setPivotX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setPivotY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setPivotY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setRotation(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setRotation(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setRotationX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setRotationX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setRotationY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setRotationY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setScaleX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setScaleX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setScaleY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setScaleY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setScreenReaderFocusable(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setStateDescription(android.view.View,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setSystemGestureExclusionRects(android.view.View,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setTranslationX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setTranslationX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setTranslationY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setTranslationY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setTranslationZ(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setX(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewCompat: void setY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setY(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void setZ(android.view.View,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void tickleInvalidationFlag(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(android.view.View,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void unregisterForLayoutCallback(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void addAccessibilityPane(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void removeAccessibilityPane(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: void <init>(int,java.lang.Class,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: void <init>(int,java.lang.Class,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: void frameworkSet(android.view.View,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: void set(android.view.View,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean shouldUpdate(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void <init>(android.view.Window,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void <init>(android.view.WindowInsetsController)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: androidx.core.view.WindowInsetsControllerCompat toWindowInsetsControllerCompat(android.view.WindowInsetsController)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void hide(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightNavigationBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightStatusBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void setSystemBarsBehavior(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat: void show(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Callback: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Callback: void onEnd(androidx.core.view.WindowInsetsAnimationCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Callback: void onPrepare(androidx.core.view.WindowInsetsAnimationCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsCompat onProgress(androidx.core.view.WindowInsetsCompat,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Callback: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void hide(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightNavigationBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightStatusBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void setSystemBarsBehavior(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl: void show(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener: void onControllableInsetsChanged(androidx.core.view.WindowInsetsControllerCompat,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControlListenerCompat: void onCancelled(androidx.core.view.WindowInsetsAnimationControllerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControlListenerCompat: void onFinished(androidx.core.view.WindowInsetsAnimationControllerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControlListenerCompat: void onReady(androidx.core.view.WindowInsetsAnimationControllerCompat,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat: void <init>(int,android.view.animation.Interpolator,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat: void <init>(android.view.WindowInsetsAnimation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat: void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat: androidx.core.view.WindowInsetsAnimationCompat toWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat: void setAlpha(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat: void setFraction(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: void <init>(android.view.WindowInsetsAnimation$Bounds)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: void <init>(androidx.core.graphics.Insets,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat toBoundsCompat(android.view.WindowInsetsAnimation$Bounds)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat inset(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat: void <init>(android.view.WindowInsetsAnimationController)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat: void finish(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat: void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl: void <init>(int,android.view.animation.Interpolator,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl: void setAlpha(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl: void setFraction(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: void finish(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat$Impl: void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$2: void <init>(int,java.lang.Class,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$2: java.lang.Boolean frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$2: java.lang.Object frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$2: void frameworkSet(android.view.View,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$2: boolean shouldUpdate(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$3: void <init>(int,java.lang.Class,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$3: boolean shouldUpdate(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$4: void <init>(int,java.lang.Class,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$4: java.lang.Object frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$4: boolean shouldUpdate(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$5: void <init>(int,java.lang.Class,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$5: java.lang.Object frameworkGet(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$5: boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$5: boolean shouldUpdate(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api21Impl$1: void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$CompatImplApi28$1: void <init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$CompatImplApi28$1: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$CompatImplApi28: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$CompatImplApi28: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$UnhandledKeyEventManager: void registerListeningView(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$UnhandledKeyEventManager: void unregisterListeningView(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewConfigurationCompat: float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewConfigurationCompat: boolean hasPermanentMenuKey(android.view.ViewConfiguration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewConfigurationCompat: boolean hasPermanentMenuKey(android.view.ViewConfiguration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewGroupCompat: int getLayoutMode(android.view.ViewGroup)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewGroupCompat: int getNestedScrollAxes(android.view.ViewGroup)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewGroupCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewGroupCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewGroupCompat: void setLayoutMode(android.view.ViewGroup,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewGroupCompat: void setTransitionGroup(android.view.ViewGroup,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$1: void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationCancel(android.animation.Animator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$2: void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$2: void onAnimationUpdate(android.animation.ValueAnimator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void <init>(androidx.core.view.ViewPropertyAnimatorCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationCancel(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowCompat$Impl16: void setDecorFitsSystemWindows(android.view.Window,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowCompat: androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowCompat: void setDecorFitsSystemWindows(android.view.Window,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowCompat$Impl30: androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowCompat$Impl30: void setDecorFitsSystemWindows(android.view.Window,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1: void onAnimationUpdate(android.animation.ValueAnimator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener: void <init>(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: void <init>(int,android.view.animation.Interpolator,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: int buildAnimationMask(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat computeAnimationBounds(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.View$OnApplyWindowInsetsListener createProxyListener(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnEnd(android.view.View,androidx.core.view.WindowInsetsAnimationCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnPrepare(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,android.view.WindowInsets,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnProgress(android.view.View,androidx.core.view.WindowInsetsCompat,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: void dispatchOnStart(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: android.view.WindowInsets forwardToViewIfNeeded(android.view.View,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: androidx.core.view.WindowInsetsAnimationCompat$Callback getCallback(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: androidx.core.view.WindowInsetsCompat interpolateInsets(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,float,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21: void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2: void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2: void onAnimationEnd(android.animation.Animator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3: void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat,android.animation.ValueAnimator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: void <init>(androidx.core.view.WindowInsetsAnimationCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: androidx.core.view.WindowInsetsAnimationCompat getWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: void onEnd(android.view.WindowInsetsAnimation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: void onPrepare(android.view.WindowInsetsAnimation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback: android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30: void <init>(int,android.view.animation.Interpolator,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30: void <init>(android.view.WindowInsetsAnimation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30: android.view.WindowInsetsAnimation$Bounds createPlatformBounds(androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30: androidx.core.graphics.Insets getHigherBounds(android.view.WindowInsetsAnimation$Bounds)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30: androidx.core.graphics.Insets getLowerBounds(android.view.WindowInsetsAnimation$Bounds)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30: void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationCompat$Impl30: void setFraction(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: void <init>(android.view.WindowInsetsAnimationController)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: void finish(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30: void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: void <init>(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setDisplayCutout(androidx.core.view.DisplayCutoutCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setInsets(int,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setTappableElementInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setTappableElementInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setVisible(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void <init>(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl: void setVisible(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl20: void <init>(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void <init>(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setVisible(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl21: void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl21: void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl28: void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl28: void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl29: void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl29: void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl30: void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl30: void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$Type: int indexOf(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20$1: void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl20,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void <init>(android.view.Window,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void hideForType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void showForType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void hide(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemBarsBehavior(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemUiFlag(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void setWindowFlag(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void show(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetSystemUiFlag(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetWindowFlag(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl23: void <init>(android.view.Window,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl23: void setAppearanceLightStatusBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl26: void <init>(android.view.Window,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl26: void setAppearanceLightNavigationBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30$1: void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsAnimationControlListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30$1: void onCancelled(android.view.WindowInsetsAnimationController)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30$1: void onFinished(android.view.WindowInsetsAnimationController)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30$1: void onReady(android.view.WindowInsetsAnimationController,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void hide(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightNavigationBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightStatusBars(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void setSystemBarsBehavior(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30: void show(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30$2: void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.WindowInsetsControllerCompat$Impl30$2: void onControllableInsetsChanged(android.view.WindowInsetsController,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityEventCompat: void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: int getAction(android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: int getMovementGranularity(android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: void setAction(android.view.accessibility.AccessibilityEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityEventCompat: void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getAddedCount()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getFromIndex()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getItemCount()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollX()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollY()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: java.util.List getText()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getToIndex()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int getWindowId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: int hashCode()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isChecked()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isFullScreen()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isPassword()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isScrollable()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void recycle()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper: void onAccessibilityStateChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper: void onTouchExplorationStateChanged(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16: boolean performAction(int,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26: void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26: void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorApi14: void <init>(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorApi14: void <init>(float,float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorApi14: void <init>(android.graphics.Path)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorApi14: android.graphics.Path createCubic(float,float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorApi14: android.graphics.Path createQuad(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorApi14: float getInterpolation(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(android.graphics.Path)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat$Impl30: java.lang.CharSequence getInitialSelectedText(android.view.inputmethod.EditorInfo,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat$Impl30: java.lang.CharSequence getInitialTextAfterCursor(android.view.inputmethod.EditorInfo,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat$Impl30: java.lang.CharSequence getInitialTextBeforeCursor(android.view.inputmethod.EditorInfo,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat$Impl30: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.inputmethod.EditorInfoCompat: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: java.lang.CharSequence getInitialSelectedText(android.view.inputmethod.EditorInfo,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: java.lang.CharSequence getInitialTextAfterCursor(android.view.inputmethod.EditorInfo,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: java.lang.CharSequence getInitialTextBeforeCursor(android.view.inputmethod.EditorInfo,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: int getProtocol(android.view.inputmethod.EditorInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: boolean isCutOnSurrogate(java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: boolean isPasswordInputType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.EditorInfoCompat: void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat$1: void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.view.inputmethod.InputConnectionCompat: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat: boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener: boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputContentInfoCompat: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputContentInfoCompat: void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat$2: void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputConnectionCompat$2: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ContentLoadingProgressBar: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ContentLoadingProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void <init>(androidx.core.widget.AutoScrollHelper)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat$Api14Impl: android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat: android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat: android.content.res.ColorStateList getCheckMarkTintList(android.widget.CheckedTextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat: android.graphics.PorterDuff$Mode getCheckMarkTintMode(android.widget.CheckedTextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat: void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat: void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat$Api16Impl: android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat$Api21Impl: android.content.res.ColorStateList getCheckMarkTintList(android.widget.CheckedTextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getCheckMarkTintMode(android.widget.CheckedTextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat$Api21Impl: void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CheckedTextViewCompat$Api21Impl: void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CompoundButtonCompat: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.EdgeEffectCompat: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: void finish()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: boolean isFinished()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: boolean onAbsorb(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.EdgeEffectCompat: boolean onAbsorb(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: boolean onPull(float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.EdgeEffectCompat: boolean onPull(float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: boolean onPull(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.EdgeEffectCompat: boolean onPull(float,float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: boolean onRelease()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.EdgeEffectCompat: void setSize(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.EdgeEffectCompat: void setSize(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState[] newArray(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object[] newArray(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.PopupMenuCompat: android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: void <init>(android.content.Context,android.view.animation.Interpolator)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: void abortAnimation()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: boolean computeScrollOffset()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: float getCurrVelocity()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: int getCurrX()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: int getCurrY()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: int getFinalX()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: int getFinalY()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: boolean isFinished()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: boolean isOverScrolled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: void notifyHorizontalEdgeReached(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: void notifyHorizontalEdgeReached(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: void notifyVerticalEdgeReached(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: void notifyVerticalEdgeReached(int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: boolean springBack(int,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: boolean springBack(int,int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getMaxLines(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getMinLines(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: java.lang.reflect.Field retrieveField(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: void <init>(android.view.ActionMode$Callback,android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: boolean isEditable(android.widget.TextView)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: void recomputeProcessTextMenuItems(android.view.Menu)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: void onDestroyActionMode(android.view.ActionMode)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewCompat$OreoCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl: java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewOnReceiveContentListener: java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewOnReceiveContentListener: void replaceSelection(android.text.Editable,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewOnReceiveContentListener: androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl: java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.core.widget.TintableCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.cursoradapter.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.customview.widget.ExploreByTouchHelper: int getFocusedVirtualView()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <androidx.fragment.app.FragmentManagerKt: void transaction(androidx.fragment.app.FragmentManager,boolean,boolean,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentPagerAdapter: void <init>(androidx.fragment.app.FragmentManager)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentStatePagerAdapter: void <init>(androidx.fragment.app.FragmentManager)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void <init>(android.content.Context,android.util.AttributeSet)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void onAttachedToWindow()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void onDetachedFromWindow()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void onRestoreInstanceState(android.os.Parcelable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: android.os.Parcelable onSaveInstanceState()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void onTabChanged(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void setup()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.legacy.widget.Space: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.legacy.widget.Space: void <init>(android.content.Context,android.util.AttributeSet)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.legacy.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.legacy.widget.Space: void draw(android.graphics.Canvas)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.legacy.widget.Space: void onMeasure(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.Job: void cancel()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.Job: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.Job: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.SendChannel: boolean offer(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel: void cancel()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object poll()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelIterator: java.lang.Object next(kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.lifecycle.Lifecycling: androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <androidx.lifecycle.LiveDataKt: androidx.lifecycle.Observer observe(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher plus(kotlinx.coroutines.CoroutineDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory$Companion: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <androidx.lifecycle.ViewModelProvider$NewInstanceFactory$Companion: void getInstance$annotations()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.loader.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.loader.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.Preference: void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$ViewHolder: int getPosition()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$LayoutManager: void setAutoMeasureEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$SmoothScroller: void instantScrollToPosition(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewPosition()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.EditTextPreferenceDialogFragment: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.EditTextPreferenceDialogFragment: androidx.preference.EditTextPreferenceDialogFragment newInstance(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.EditTextPreferenceDialogFragment: void onDialogClosed(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceDialogFragment: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceDialogFragment: androidx.preference.DialogPreference getPreference()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceDialogFragment: void onBindDialogView(android.view.View)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceDialogFragment: void onClick(android.content.DialogInterface,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceDialogFragment: android.view.View onCreateDialogView(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceDialogFragment: void onDialogClosed(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceDialogFragment: void onPrepareDialogBuilder(android.app.AlertDialog$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.ListPreferenceDialogFragment: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.ListPreferenceDialogFragment: androidx.preference.ListPreferenceDialogFragment newInstance(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.ListPreferenceDialogFragment: void onDialogClosed(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.MultiSelectListPreferenceDialogFragment: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.MultiSelectListPreferenceDialogFragment: androidx.preference.MultiSelectListPreferenceDialogFragment newInstance(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.MultiSelectListPreferenceDialogFragment: void onDialogClosed(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceCategory: void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void addPreferencesFromResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: androidx.preference.Preference findPreference(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: androidx.recyclerview.widget.RecyclerView getListView()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: androidx.preference.PreferenceManager getPreferenceManager()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: androidx.preference.PreferenceScreen getPreferenceScreen()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: androidx.recyclerview.widget.RecyclerView$LayoutManager onCreateLayoutManager()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void onDisplayPreferenceDialog(androidx.preference.Preference)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void onNavigateToScreen(androidx.preference.PreferenceScreen)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: boolean onPreferenceTreeClick(androidx.preference.Preference)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void scrollToPreference(androidx.preference.Preference)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void scrollToPreference(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void setDivider(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void setDividerHeight(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void setPreferenceScreen(androidx.preference.PreferenceScreen)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.preference.PreferenceFragment: void setPreferencesFromResource(int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.LinearLayoutManager: int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <androidx.room.CoroutinesRoom$Companion: kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <androidx.room.CoroutinesRoom$Companion: java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RoomDatabase: void beginTransaction()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RoomDatabase: void endTransaction()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RoomDatabase: void setTransactionSuccessful()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <androidx.room.CoroutinesRoom: kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <androidx.room.CoroutinesRoom: java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.DatabaseConfiguration: void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.DatabaseConfiguration: void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,boolean,java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.DatabaseConfiguration: boolean isMigrationRequiredFrom(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.Room: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RoomOpenHelper$Delegate: void validateMigration(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RoomWarnings: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RxRoom: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RxRoom: io.reactivex.Flowable createFlowable(androidx.room.RoomDatabase,java.lang.String[],java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.RxRoom: io.reactivex.Observable createObservable(androidx.room.RoomDatabase,java.lang.String[],java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable ambArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable ambArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable ambArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(io.reactivex.functions.Function,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(io.reactivex.functions.Function,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(io.reactivex.functions.Function,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatest(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(io.reactivex.functions.Function,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable combineLatestDelayError(org.reactivestreams.Publisher[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concat(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEager(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatArrayEagerDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable create(io.reactivex.FlowableOnSubscribe,io.reactivex.BackpressureStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable create(io.reactivex.FlowableOnSubscribe,io.reactivex.BackpressureStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable create(io.reactivex.FlowableOnSubscribe,io.reactivex.BackpressureStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable empty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable empty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable empty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromIterable(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromIterable(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromIterable(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable merge(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArray(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArray(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArray(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(int,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeArrayDelayError(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable range(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable range(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable range(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable rangeLong(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable rangeLong(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable rangeLong(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single sequenceEqual(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiPredicate,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNext(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchOnNextDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable unsafeCreate(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable unsafeCreate(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable unsafeCreate(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zip(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipArray(io.reactivex.functions.Function,boolean,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zipArray(io.reactivex.functions.Function,boolean,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipArray(io.reactivex.functions.Function,boolean,int,org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single all(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single all(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single all(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable ambWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable ambWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable ambWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single any(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single any(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single any(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object as(io.reactivex.FlowableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object as(io.reactivex.FlowableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object as(io.reactivex.FlowableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object blockingFirst()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object blockingFirst()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object blockingFirst()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object blockingFirst(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object blockingFirst(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object blockingFirst(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingForEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingForEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingIterable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Iterable blockingIterable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingIterable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingIterable(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Iterable blockingIterable(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingIterable(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object blockingLast()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object blockingLast()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object blockingLast()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object blockingLast(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object blockingLast(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object blockingLast(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Iterable blockingLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingMostRecent(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Iterable blockingMostRecent(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingMostRecent(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingNext()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Iterable blockingNext()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Iterable blockingNext()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object blockingSingle()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object blockingSingle()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object blockingSingle()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object blockingSingle(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object blockingSingle(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object blockingSingle(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void blockingSubscribe(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void blockingSubscribe(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(io.reactivex.Flowable,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable buffer(org.reactivestreams.Publisher,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable cacheWithInitialCapacity(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable cacheWithInitialCapacity(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable cacheWithInitialCapacity(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapDelayError(io.reactivex.functions.Function,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEager(io.reactivex.functions.Function,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybe(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingle(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable concatWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single count()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single count()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single count()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable debounce(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable defaultIfEmpty(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable defaultIfEmpty(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable defaultIfEmpty(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delay(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable dematerialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable dematerialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable dematerialize()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.Flowable: io.reactivex.Flowable dematerialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable dematerialize(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable dematerialize(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable dematerialize(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable distinctUntilChanged(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doAfterNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doAfterNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doAfterNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnCancel(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnCancel(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnCancel(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnEach(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.LongConsumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnRequest(io.reactivex.functions.LongConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnRequest(io.reactivex.functions.LongConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnRequest(io.reactivex.functions.LongConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe elementAt(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Maybe elementAt(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe elementAt(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single elementAt(long,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single elementAt(long,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single elementAt(long,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single elementAtOrError(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single elementAtOrError(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single elementAtOrError(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single first(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single first(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single first(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe firstElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Maybe firstElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe firstElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single firstOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single firstOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single firstOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMap(io.reactivex.functions.Function,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapMaybe(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable flatMapSingle(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupBy(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupJoin(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable groupJoin(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable groupJoin(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable ignoreElements()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable ignoreElements()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable ignoreElements()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single isEmpty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single isEmpty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single isEmpty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable join(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable join(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable join(org.reactivestreams.Publisher,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single last(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single last(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single last(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe lastElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Maybe lastElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe lastElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single lastOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single lastOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single lastOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable lift(io.reactivex.FlowableOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable lift(io.reactivex.FlowableOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable lift(io.reactivex.FlowableOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable limit(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable limit(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable limit(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable mergeWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable observeOn(io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable ofType(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable ofType(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable ofType(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(int,boolean,boolean,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(long,io.reactivex.functions.Action,io.reactivex.BackpressureOverflowStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(long,io.reactivex.functions.Action,io.reactivex.BackpressureOverflowStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(long,io.reactivex.functions.Action,io.reactivex.BackpressureOverflowStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureBuffer(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureDrop(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onBackpressureLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorResumeNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onExceptionResumeNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onExceptionResumeNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onExceptionResumeNext(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.parallel.ParallelFlowable parallel(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable publish(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable publish(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable rebatchRequests(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable rebatchRequests(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable rebatchRequests(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.flowables.ConnectableFlowable replay(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retryUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable retryUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retryUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void safeSubscribe(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void safeSubscribe(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sample(org.reactivestreams.Publisher,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable scan(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable scan(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable scan(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable scan(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable scan(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable scan(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable serialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable serialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable serialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable share()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable share()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable share()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single single(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single single(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single single(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe singleElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Maybe singleElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Maybe singleElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single singleOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single singleOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single singleOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable skipWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable skipWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sorted()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sorted()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sorted()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sorted(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable sorted(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable sorted(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWithArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable startWithArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable startWithArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void subscribe(io.reactivex.FlowableSubscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void subscribe(io.reactivex.FlowableSubscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: void subscribe(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: void subscribe(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable subscribeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: org.reactivestreams.Subscriber subscribeWith(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: org.reactivestreams.Subscriber subscribeWith(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: org.reactivestreams.Subscriber subscribeWith(org.reactivestreams.Subscriber)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchIfEmpty(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchIfEmpty(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchIfEmpty(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapDelayError(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable switchMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeUntil(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeUntil(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeUntil(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable takeWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable takeWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.subscribers.TestSubscriber test(long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(long,java.util.concurrent.TimeUnit,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function,io.reactivex.Flowable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function,io.reactivex.Flowable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(io.reactivex.functions.Function,io.reactivex.Flowable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timeout(org.reactivestreams.Publisher,io.reactivex.functions.Function,org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: java.util.concurrent.Future toFuture()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: java.util.concurrent.Future toFuture()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: java.util.concurrent.Future toFuture()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toList(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toList(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toList(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Single toSortedList(java.util.Comparator,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable window(org.reactivestreams.Publisher,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,org.reactivestreams.Publisher,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable withLatestFrom(org.reactivestreams.Publisher[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Flowable: io.reactivex.Flowable zipWith(org.reactivestreams.Publisher,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable ambArray(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable ambArray(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatest(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.functions.Function,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(java.lang.Iterable,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable combineLatestDelayError(io.reactivex.ObservableSource[],io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concat(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatArray(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatArray(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayDelayError(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayDelayError(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEager(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEager(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEager(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEager(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatArrayEagerDelayError(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatDelayError(io.reactivex.ObservableSource,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(io.reactivex.ObservableSource,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatEager(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable create(io.reactivex.ObservableOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable create(io.reactivex.ObservableOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable empty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable empty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromIterable(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromIterable(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable generate(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable generate(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable generate(java.util.concurrent.Callable,io.reactivex.functions.BiFunction,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable interval(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable intervalRange(long,long,long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable just(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable merge(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeArray(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeArray(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeArray(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeArray(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(int,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeArrayDelayError(io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeDelayError(java.lang.Iterable,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable range(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable range(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable rangeLong(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable rangeLong(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single sequenceEqual(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiPredicate,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNext(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchOnNextDelayError(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable unsafeCreate(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable unsafeCreate(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable wrap(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable wrap(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zipArray(io.reactivex.functions.Function,boolean,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zipArray(io.reactivex.functions.Function,boolean,int,io.reactivex.ObservableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zipIterable(java.lang.Iterable,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single all(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single all(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable ambWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable ambWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single any(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single any(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object as(io.reactivex.ObservableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object as(io.reactivex.ObservableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object blockingFirst()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object blockingFirst()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object blockingFirst(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object blockingFirst(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void blockingForEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Iterable blockingIterable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Iterable blockingIterable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Iterable blockingIterable(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Iterable blockingIterable(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object blockingLast()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object blockingLast()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object blockingLast(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object blockingLast(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Iterable blockingLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Iterable blockingLatest()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Iterable blockingMostRecent(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Iterable blockingMostRecent(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Iterable blockingNext()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Iterable blockingNext()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object blockingSingle()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object blockingSingle()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object blockingSingle(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object blockingSingle(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void blockingSubscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void blockingSubscribe(io.reactivex.Observer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void blockingSubscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int,int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int,int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(int,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int,java.util.concurrent.Callable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(io.reactivex.ObservableSource,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable buffer(java.util.concurrent.Callable,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable cacheWithInitialCapacity(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable cacheWithInitialCapacity(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single collectInto(java.lang.Object,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable compose(io.reactivex.ObservableTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable compose(io.reactivex.ObservableTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable concatMapCompletableDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapDelayError(io.reactivex.functions.Function,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEager(io.reactivex.functions.Function,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapEagerDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapIterable(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybe(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapMaybeDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingle(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatMapSingleDelayError(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single count()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single count()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable debounce(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable debounce(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable debounce(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable defaultIfEmpty(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable defaultIfEmpty(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delay(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable delaySubscription(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable delaySubscription(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable dematerialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable dematerialize()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.Observable: io.reactivex.Observable dematerialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable dematerialize(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable dematerialize(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable distinct()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable distinct()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable distinct(io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable distinctUntilChanged(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doAfterNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doAfterNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.Observer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.Observer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Maybe elementAt(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Maybe elementAt(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single elementAt(long,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single elementAt(long,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single elementAtOrError(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single elementAtOrError(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single first(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single first(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Maybe firstElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Maybe firstElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single firstOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single firstOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMap(io.reactivex.functions.Function,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMapIterable(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMapMaybe(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable flatMapSingle(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEach(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable forEachWhile(io.reactivex.functions.Predicate,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable groupBy(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable groupJoin(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable groupJoin(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable ignoreElements()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable ignoreElements()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single isEmpty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single isEmpty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable join(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable join(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single last(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single last(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Maybe lastElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Maybe lastElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single lastOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single lastOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable lift(io.reactivex.ObservableOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable lift(io.reactivex.ObservableOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable observeOn(io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable ofType(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable ofType(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable onExceptionResumeNext(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable onExceptionResumeNext(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable publish(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable publish(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable publish()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable publish()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Maybe reduce(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single reduce(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single reduceWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable replay(io.reactivex.functions.Function,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(int,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observables.ConnectableObservable replay(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable retryUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable retryUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void safeSubscribe(io.reactivex.Observer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sample(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sample(io.reactivex.ObservableSource,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable scan(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable scan(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable scan(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable scan(java.lang.Object,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable scanWith(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable serialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable serialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable share()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable share()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single single(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single single(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Maybe singleElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Maybe singleElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single singleOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single singleOrError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skip(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skip(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skip(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipUntil(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipUntil(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable skipWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable skipWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sorted()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sorted()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable sorted(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable sorted(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable startWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable startWith(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable startWith(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable startWithArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable startWithArray(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: void subscribe(io.reactivex.Observer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observer subscribeWith(io.reactivex.Observer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchIfEmpty(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchIfEmpty(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable switchMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Completable switchMapCompletableDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMapDelayError(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMapMaybeDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable switchMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable switchMapSingleDelayError(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable take(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable take(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable take(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeLast(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeUntil(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable takeWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable takeWhile(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleFirst(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleLast(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleLatest(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable throttleWithTimeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeInterval(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.ObservableSource,io.reactivex.functions.Function,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timeout(io.reactivex.functions.Function,io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timestamp()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timestamp()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timestamp(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timestamp(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable timestamp(java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Observable: io.reactivex.Flowable toFlowable(io.reactivex.BackpressureStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Flowable toFlowable(io.reactivex.BackpressureStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Flowable toFlowable(io.reactivex.BackpressureStrategy)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: java.util.concurrent.Future toFuture()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: java.util.concurrent.Future toFuture()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toList(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toList(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toMultimap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toSortedList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toSortedList()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toSortedList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toSortedList(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Single toSortedList(java.util.Comparator,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,long,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(io.reactivex.ObservableSource,io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable window(java.util.concurrent.Callable,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.ObservableSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable withLatestFrom(io.reactivex.ObservableSource[],io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(io.reactivex.ObservableSource,io.reactivex.functions.BiFunction,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Observable: io.reactivex.Observable zipWith(java.lang.Iterable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single ambArray(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single ambArray(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Observable concat(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Observable concat(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatArray(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concatArray(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatArray(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatArrayEager(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concatArrayEager(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatArrayEager(io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single create(io.reactivex.SingleOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single create(io.reactivex.SingleOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single equals(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single equals(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single fromFuture(java.util.concurrent.Future,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single fromObservable(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single fromObservable(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Single fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single merge(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single merge(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single unsafeCreate(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single unsafeCreate(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single wrap(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single wrap(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(io.reactivex.SingleSource,io.reactivex.SingleSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zipArray(io.reactivex.functions.Function,io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zipArray(io.reactivex.functions.Function,io.reactivex.SingleSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single ambWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single ambWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: java.lang.Object as(io.reactivex.SingleConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: java.lang.Object as(io.reactivex.SingleConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: java.lang.Object blockingGet()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: java.lang.Object blockingGet()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single compose(io.reactivex.SingleTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single compose(io.reactivex.SingleTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable concatWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single contains(java.lang.Object,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single contains(java.lang.Object,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delay(long,java.util.concurrent.TimeUnit,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Maybe dematerialize(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Maybe dematerialize(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doAfterSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doAfterSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doOnEvent(io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doOnEvent(io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doOnSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doOnSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Maybe filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Maybe filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Maybe flatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Maybe flatMapMaybe(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Observable flatMapObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Observable flatMapObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Observable flattenAsObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Observable flattenAsObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Completable ignoreElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Completable ignoreElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single lift(io.reactivex.SingleOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single lift(io.reactivex.SingleOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable mergeWith(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.Single)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.Single)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.disposables.Disposable subscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: void subscribe(io.reactivex.SingleObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.SingleObserver subscribeWith(io.reactivex.SingleObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.SingleObserver subscribeWith(io.reactivex.SingleObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single takeUntil(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Single takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single timeout(long,java.util.concurrent.TimeUnit,io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Completable toCompletable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Completable toCompletable()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.Single: io.reactivex.Completable toCompletable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Single: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: java.util.concurrent.Future toFuture()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: java.util.concurrent.Future toFuture()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Maybe toMaybe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Maybe toMaybe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Single: io.reactivex.Single zipWith(io.reactivex.SingleSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Single: io.reactivex.Single zipWith(io.reactivex.SingleSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable ambArray(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable ambArray(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable complete()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable complete()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable concatArray(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable concatArray(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable create(io.reactivex.CompletableOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable create(io.reactivex.CompletableOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doOnLifecycle(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Action,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromAction(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromAction(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromMaybe(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromMaybe(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromObservable(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromObservable(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromPublisher(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromRunnable(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromRunnable(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable fromSingle(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable fromSingle(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable merge0(org.reactivestreams.Publisher,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable merge0(org.reactivestreams.Publisher,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable merge0(org.reactivestreams.Publisher,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable mergeArray(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeArray(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable mergeArrayDelayError(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeArrayDelayError(io.reactivex.CompletableSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable timeout0(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable timeout0(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable unsafeCreate(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable unsafeCreate(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable wrap(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable wrap(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable ambWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable ambWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable andThen(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable andThen(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Flowable andThen(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Flowable andThen(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Flowable andThen(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Maybe andThen(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Maybe andThen(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Observable andThen(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Observable andThen(io.reactivex.ObservableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Single andThen(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Single andThen(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: java.lang.Object as(io.reactivex.CompletableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: java.lang.Object as(io.reactivex.CompletableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: void blockingAwait()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: boolean blockingAwait(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: boolean blockingAwait(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: java.lang.Throwable blockingGet()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: java.lang.Throwable blockingGet()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: java.lang.Throwable blockingGet(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: java.lang.Throwable blockingGet(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable compose(io.reactivex.CompletableTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable compose(io.reactivex.CompletableTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable concatWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable concatWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doOnEvent(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doOnEvent(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable lift(io.reactivex.CompletableOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable lift(io.reactivex.CompletableOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Single materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Single materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable mergeWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable mergeWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable onErrorComplete()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable onErrorComplete()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable onErrorComplete(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable onErrorComplete(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable startWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable startWith(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Flowable startWith(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Observable startWith(io.reactivex.Observable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Observable startWith(io.reactivex.Observable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Action,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Action,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: void subscribe(io.reactivex.CompletableObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.CompletableObserver subscribeWith(io.reactivex.CompletableObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.CompletableObserver subscribeWith(io.reactivex.CompletableObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable takeUntil(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable takeUntil(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Completable: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Maybe toMaybe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Maybe toMaybe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Single toSingle(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Single toSingle(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Single toSingleDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Single toSingleDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Completable: io.reactivex.Completable unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Completable: io.reactivex.Completable unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe amb(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe ambArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe ambArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concat(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArrayDelayError(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArrayDelayError(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArrayDelayError(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArrayEager(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArrayEager(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatArrayEager(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatEager(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatEager(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe create(io.reactivex.MaybeOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe create(io.reactivex.MaybeOnSubscribe)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe defer(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe empty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe empty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe error(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe error(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe fromAction(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe fromAction(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe fromCallable(java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe fromCompletable(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe fromCompletable(io.reactivex.CompletableSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe fromFuture(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe fromFuture(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe fromRunnable(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe fromRunnable(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe fromSingle(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe fromSingle(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe just(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable merge(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe merge(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe merge(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeArray(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeArrayDelayError(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeArrayDelayError(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeArrayDelayError(io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeDelayError(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe never()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single sequenceEqual(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single sequenceEqual(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single sequenceEqual(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single sequenceEqual(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timer(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timer(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe unsafeCreate(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe unsafeCreate(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe using(java.util.concurrent.Callable,io.reactivex.functions.Function,io.reactivex.functions.Consumer,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe wrap(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe wrap(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function9)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function8)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function7)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(io.reactivex.MaybeSource,io.reactivex.MaybeSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zip(java.lang.Iterable,io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zipArray(io.reactivex.functions.Function,io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zipArray(io.reactivex.functions.Function,io.reactivex.MaybeSource[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe ambWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe ambWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: java.lang.Object as(io.reactivex.MaybeConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: java.lang.Object as(io.reactivex.MaybeConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: java.lang.Object blockingGet()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: java.lang.Object blockingGet()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: java.lang.Object blockingGet(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: java.lang.Object blockingGet(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe cache()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe cast(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe compose(io.reactivex.MaybeTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe compose(io.reactivex.MaybeTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable concatWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single contains(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single count()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single count()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe defaultIfEmpty(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe defaultIfEmpty(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delay(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delay(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe delay(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delay(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe delaySubscription(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doAfterSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doAfterSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doAfterTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doFinally(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnDispose(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnEvent(io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnEvent(io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnSuccess(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe doOnTerminate(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMap(io.reactivex.functions.Function,io.reactivex.functions.Function,java.util.concurrent.Callable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Completable flatMapCompletable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Observable flatMapObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Observable flatMapObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable flatMapPublisher(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single flatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single flatMapSingle(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMapSingleElement(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe flatMapSingleElement(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable flattenAsFlowable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Observable flattenAsObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Observable flattenAsObservable(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe hide()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Completable ignoreElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Completable ignoreElement()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single isEmpty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single isEmpty()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe lift(io.reactivex.MaybeOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe lift(io.reactivex.MaybeOperator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single materialize()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable mergeWith(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe observeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe ofType(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe ofType(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorComplete()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorComplete()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorComplete(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorComplete(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorResumeNext(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorResumeNext(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorResumeNext(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorReturn(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onErrorReturnItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onExceptionResumeNext(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onExceptionResumeNext(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe onTerminateDetach()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeat()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeat(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeatUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable repeatWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe retry()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(long)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(long,io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(io.reactivex.functions.BiPredicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe retry(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe retryUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe retryUntil(io.reactivex.functions.BooleanSupplier)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe retryWhen(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer,io.reactivex.functions.Consumer,io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: void subscribe(io.reactivex.MaybeObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe subscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.MaybeObserver subscribeWith(io.reactivex.MaybeObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.MaybeObserver subscribeWith(io.reactivex.MaybeObserver)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe switchIfEmpty(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe switchIfEmpty(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single switchIfEmpty(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single switchIfEmpty(io.reactivex.SingleSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe takeUntil(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe takeUntil(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe takeUntil(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.observers.TestObserver test()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.observers.TestObserver test(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(io.reactivex.MaybeSource,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe timeout(org.reactivestreams.Publisher,io.reactivex.MaybeSource)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Flowable toFlowable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Observable toObservable()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single toSingle()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single toSingle()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Single toSingle(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Single toSingle(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe unsubscribeOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.Maybe: io.reactivex.Maybe zipWith(io.reactivex.MaybeSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.Maybe: io.reactivex.Maybe zipWith(io.reactivex.MaybeSource,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable 'from'(org.reactivestreams.Publisher)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable 'from'(org.reactivestreams.Publisher,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable 'from'(org.reactivestreams.Publisher,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable fromArray(org.reactivestreams.Publisher[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: java.lang.Object as(io.reactivex.parallel.ParallelFlowableConverter)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable collect(java.util.concurrent.Callable,io.reactivex.functions.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable compose(io.reactivex.parallel.ParallelTransformer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMap(io.reactivex.functions.Function,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMapDelayError(io.reactivex.functions.Function,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable concatMapDelayError(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doAfterNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doAfterTerminated(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnCancel(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnComplete(io.reactivex.functions.Action)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnError(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnNext(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnNext(io.reactivex.functions.Consumer,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnNext(io.reactivex.functions.Consumer,io.reactivex.parallel.ParallelFailureHandling)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnRequest(io.reactivex.functions.LongConsumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable doOnSubscribe(io.reactivex.functions.Consumer)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable filter(io.reactivex.functions.Predicate)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable filter(io.reactivex.functions.Predicate,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable filter(io.reactivex.functions.Predicate,io.reactivex.parallel.ParallelFailureHandling)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable flatMap(io.reactivex.functions.Function,boolean,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable map(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable map(io.reactivex.functions.Function,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable map(io.reactivex.functions.Function,io.reactivex.parallel.ParallelFailureHandling)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable reduce(io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable reduce(java.util.concurrent.Callable,io.reactivex.functions.BiFunction)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable runOn(io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.parallel.ParallelFlowable runOn(io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequential(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sequentialDelayError(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sorted(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable sorted(java.util.Comparator,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: java.lang.Object 'to'(io.reactivex.functions.Function)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable toSortedList(java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.parallel.ParallelFlowable: io.reactivex.Flowable toSortedList(java.util.Comparator,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/BackpressureSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.flowables.ConnectableFlowable: io.reactivex.Flowable refCount(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(int,long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/SchedulerSupport; method: <io.reactivex.observables.ConnectableObservable: io.reactivex.Observable refCount(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.room.util.TableInfo$Column: void <init>(java.lang.String,java.lang.String,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean canSlide()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.slidingpanelayout.widget.SlidingPaneLayout: void smoothSlideClosed()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.slidingpanelayout.widget.SlidingPaneLayout: void smoothSlideOpen()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.transition.TransitionValues: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ArrayCreatingInputMerger: java.lang.Object concatenateArrayAndNonArray(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ArrayCreatingInputMerger: java.lang.Object concatenateArrays(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ArrayCreatingInputMerger: java.lang.Object concatenateNonArrays(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ArrayCreatingInputMerger: java.lang.Object createArrayFor(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ArrayCreatingInputMerger: androidx.work.Data merge(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.InputMerger: androidx.work.InputMerger fromClassName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.InputMerger: androidx.work.Data merge(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: void <init>(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: void <init>(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.Boolean[] convertPrimitiveBooleanArray(boolean[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.Byte[] convertPrimitiveByteArray(byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.Double[] convertPrimitiveDoubleArray(double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.Float[] convertPrimitiveFloatArray(float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.Integer[] convertPrimitiveIntArray(int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.Long[] convertPrimitiveLongArray(long[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: byte[] convertToPrimitiveArray(java.lang.Byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: double[] convertToPrimitiveArray(java.lang.Double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: float[] convertToPrimitiveArray(java.lang.Float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: int[] convertToPrimitiveArray(java.lang.Integer[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: long[] convertToPrimitiveArray(java.lang.Long[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: boolean[] convertToPrimitiveArray(java.lang.Boolean[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: androidx.work.Data fromByteArray(byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: byte[] toByteArrayInternal(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: boolean getBoolean(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: boolean[] getBooleanArray(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: byte getByte(java.lang.String,byte)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: byte[] getByteArray(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: double getDouble(java.lang.String,double)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: double[] getDoubleArray(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: float getFloat(java.lang.String,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: float[] getFloatArray(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: int getInt(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: int[] getIntArray(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: long getLong(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: long[] getLongArray(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.String getString(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: java.lang.String[] getStringArray(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data: boolean hasKeyWithValueOfType(java.lang.String,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.BackoffPolicy: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$1: void <init>(androidx.work.Configuration,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$1: java.lang.Thread newThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration: void <init>(androidx.work.Configuration$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration: java.util.concurrent.Executor createDefaultExecutor(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration: java.util.concurrent.ThreadFactory createDefaultThreadFactory(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.InitializationExceptionHandler: void handleException(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.InputMergerFactory: androidx.work.InputMerger createInputMerger(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.InputMergerFactory: androidx.work.InputMerger createInputMergerWithDefaultFallback(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.RunnableScheduler: void cancel(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.RunnableScheduler: void scheduleWithDelay(long,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkerFactory: androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkerFactory: androidx.work.ListenableWorker createWorkerWithDefaultFallback(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: void <init>(androidx.work.Configuration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setDefaultProcessName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setExecutor(java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setInitializationExceptionHandler(androidx.work.InitializationExceptionHandler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setInputMergerFactory(androidx.work.InputMergerFactory)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setJobSchedulerJobIdRange(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setMaxSchedulerLimit(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setMinimumLoggingLevel(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setRunnableScheduler(androidx.work.RunnableScheduler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setTaskExecutor(java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Configuration$Builder: androidx.work.Configuration$Builder setWorkerFactory(androidx.work.WorkerFactory)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker: void <init>(android.content.Context,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker: com.google.common.util.concurrent.ListenableFuture setForegroundAsync(androidx.work.ForegroundInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker: com.google.common.util.concurrent.ListenableFuture setProgressAsync(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker: void setRunInForeground(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkerParameters: void <init>(java.util.UUID,androidx.work.Data,java.util.Collection,androidx.work.WorkerParameters$RuntimeExtras,int,java.util.concurrent.Executor,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.WorkerFactory,androidx.work.ProgressUpdater,androidx.work.ForegroundUpdater)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.taskexecutor.TaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.taskexecutor.TaskExecutor: void postToMainThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ForegroundInfo: void <init>(int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ForegroundInfo: void <init>(int,android.app.Notification,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ForegroundInfo: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ForegroundUpdater: com.google.common.util.concurrent.ListenableFuture setForegroundAsync(android.content.Context,java.util.UUID,androidx.work.ForegroundInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ProgressUpdater: com.google.common.util.concurrent.ListenableFuture updateProgress(android.content.Context,java.util.UUID,androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.SerialExecutor: void <init>(java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.SerialExecutor: void execute(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: void <init>(androidx.work.Constraints)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder addContentUriTrigger(android.net.Uri,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiredNetworkType(androidx.work.NetworkType)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresBatteryNotLow(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresCharging(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresDeviceIdle(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setRequiresStorageNotLow(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setTriggerContentMaxDelay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setTriggerContentMaxDelay(java.time.Duration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setTriggerContentUpdateDelay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints$Builder: androidx.work.Constraints$Builder setTriggerContentUpdateDelay(java.time.Duration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void <init>(androidx.work.Constraints$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void <init>(androidx.work.Constraints)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setContentUriTriggers(androidx.work.ContentUriTriggers)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setRequiredNetworkType(androidx.work.NetworkType)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setRequiresBatteryNotLow(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setRequiresCharging(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setRequiresDeviceIdle(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setRequiresStorageNotLow(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setTriggerContentUpdateDelay(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Constraints: void setTriggerMaxContentDelay(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ContentUriTriggers: void add(android.net.Uri,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ContentUriTriggers: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.NetworkType: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ContentUriTriggers$Trigger: void <init>(android.net.Uri,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ContentUriTriggers$Trigger: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <androidx.work.CoroutineWorker: void getCoroutineContext$annotations()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.SettableFuture: boolean set(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.SettableFuture: boolean setException(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.SettableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: void addDoneString(java.lang.StringBuilder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object checkNotNull(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener clearListeners(androidx.work.impl.utils.futures.AbstractFuture$Listener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: void complete(androidx.work.impl.utils.futures.AbstractFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: void removeWaiter(androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: java.lang.String userObjectToString(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: boolean cancel(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: void maybePropagateCancellationTo(java.util.concurrent.Future)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: boolean set(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: boolean setException(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper: boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper: boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper: boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper: void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper: void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$Listener: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$Waiter: void <init>(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$Waiter: void setNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder put(java.lang.String,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putAll(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putAll(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putBoolean(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putBooleanArray(java.lang.String,boolean[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putByte(java.lang.String,byte)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putByteArray(java.lang.String,byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putDouble(java.lang.String,double)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putDoubleArray(java.lang.String,double[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putFloat(java.lang.String,float)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putFloatArray(java.lang.String,float[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putInt(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putIntArray(java.lang.String,int[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putLong(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putLongArray(java.lang.String,long[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putString(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Data$Builder: androidx.work.Data$Builder putStringArray(java.lang.String,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.DelegatingWorkerFactory: void addFactory(androidx.work.WorkerFactory)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.DelegatingWorkerFactory: androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ExistingPeriodicWorkPolicy: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ExistingPeriodicWorkPolicy: androidx.work.ExistingPeriodicWorkPolicy valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ExistingWorkPolicy: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.InputMergerFactory$1: androidx.work.InputMerger createInputMerger(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker$Result$Failure: void <init>(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker$Result$Failure: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result failure(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker$Result: androidx.work.ListenableWorker$Result success(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker$Result$Retry: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker$Result$Success: void <init>(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.ListenableWorker$Result$Success: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger$LogcatLogger: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger$LogcatLogger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger$LogcatLogger: void error(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger$LogcatLogger: void info(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger$LogcatLogger: void verbose(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger$LogcatLogger: void warning(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: void setLogger(androidx.work.Logger)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: java.lang.String tagWithPrefix(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: void debug(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: void error(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: void info(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: void verbose(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Logger: void warning(java.lang.String,java.lang.String,java.lang.Throwable[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OneTimeWorkRequest$Builder: void <init>(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OneTimeWorkRequest$Builder: androidx.work.OneTimeWorkRequest$Builder setInputMerger(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: void <init>(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder addTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder keepResultsForAtLeast(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder keepResultsForAtLeast(java.time.Duration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setBackoffCriteria(androidx.work.BackoffPolicy,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setBackoffCriteria(androidx.work.BackoffPolicy,java.time.Duration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setConstraints(androidx.work.Constraints)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setExpedited(androidx.work.OutOfQuotaPolicy)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setInitialDelay(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setInitialDelay(java.time.Duration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setInitialRunAttemptCount(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setInitialState(androidx.work.WorkInfo$State)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setInputData(androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setPeriodStartTime(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest$Builder: androidx.work.WorkRequest$Builder setScheduleRequestedAt(long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OneTimeWorkRequest: void <init>(androidx.work.OneTimeWorkRequest$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OneTimeWorkRequest: androidx.work.OneTimeWorkRequest 'from'(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OneTimeWorkRequest: java.util.List 'from'(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkRequest: void <init>(java.util.UUID,androidx.work.impl.model.WorkSpec,java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec: void <init>(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec: void <init>(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec: void setBackoffDelayDuration(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec: void setPeriodic(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec: void setPeriodic(long,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OutOfQuotaPolicy: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkInfo$State: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkInfo: void <init>(java.util.UUID,androidx.work.WorkInfo$State,androidx.work.Data,java.util.List,androidx.work.Data,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkInfo: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Operation$State$FAILURE: void <init>(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.OverwritingInputMerger: androidx.work.Data merge(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,java.time.Duration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.PeriodicWorkRequest$Builder: void <init>(java.lang.Class,java.time.Duration,java.time.Duration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.PeriodicWorkRequest: void <init>(androidx.work.PeriodicWorkRequest$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkContinuation: androidx.work.WorkContinuation combine(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkContinuation: androidx.work.WorkContinuation combineInternal(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkContinuation: androidx.work.WorkContinuation then(androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkContinuation: androidx.work.WorkContinuation then(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.work.WorkManager: androidx.work.WorkManager getInstance()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.WorkManager getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: void initialize(android.content.Context,androidx.work.Configuration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.WorkContinuation beginUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.WorkContinuation beginUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.WorkContinuation beginWith(androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.WorkContinuation beginWith(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation cancelAllWorkByTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation cancelUniqueWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation cancelWorkById(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: android.app.PendingIntent createCancelPendingIntent(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation enqueue(androidx.work.WorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation enqueue(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation enqueueUniquePeriodicWork(java.lang.String,androidx.work.ExistingPeriodicWorkPolicy,androidx.work.PeriodicWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation enqueueUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.work.Operation enqueueUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: com.google.common.util.concurrent.ListenableFuture getWorkInfoById(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.lifecycle.LiveData getWorkInfoByIdLiveData(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: com.google.common.util.concurrent.ListenableFuture getWorkInfos(androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: com.google.common.util.concurrent.ListenableFuture getWorkInfosByTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.lifecycle.LiveData getWorkInfosByTagLiveData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: com.google.common.util.concurrent.ListenableFuture getWorkInfosForUniqueWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.lifecycle.LiveData getWorkInfosForUniqueWorkLiveData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManager: androidx.lifecycle.LiveData getWorkInfosLiveData(androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery: void <init>(androidx.work.WorkQuery$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromStates(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromTags(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder fromUniqueWorkNames(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addStates(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addTags(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkQuery$Builder: androidx.work.WorkQuery$Builder addUniqueWorkNames(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManagerInitializer: androidx.work.WorkManager create(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkManagerInitializer: java.lang.Object create(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Worker$1: void <init>(androidx.work.Worker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.Worker: void <init>(android.content.Context,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.WorkerFactory$1: androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.DefaultRunnableScheduler: void <init>(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.DefaultRunnableScheduler: void cancel(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.DefaultRunnableScheduler: void scheduleWithDelay(long,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.ExecutionListener: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.OperationImpl: void setState(androidx.work.Operation$State)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor$FutureListener: void <init>(androidx.work.impl.ExecutionListener,java.lang.String,com.google.common.util.concurrent.ListenableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean interrupt(java.lang.String,androidx.work.impl.WorkerWrapper)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: void addExecutionListener(androidx.work.impl.ExecutionListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean isCancelled(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean isEnqueued(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean isEnqueuedInForeground(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: void removeExecutionListener(androidx.work.impl.ExecutionListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: void startForeground(java.lang.String,androidx.work.ForegroundInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean startWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean startWork(java.lang.String,androidx.work.WorkerParameters$RuntimeExtras)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean stopAndCancelWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: void stopForeground(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean stopForegroundWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Processor: boolean stopWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.ForegroundProcessor: void startForeground(java.lang.String,androidx.work.ForegroundInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.ForegroundProcessor: void stopForeground(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase: androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper: void <init>(androidx.work.impl.WorkerWrapper$Builder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper: java.lang.String createWorkDescription(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper: void handleResult(androidx.work.ListenableWorker$Result)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper: void iterativelyFailWorkAndDependents(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper: void resolve(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao: java.util.List getDependentWorkIds(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao: java.util.List getPrerequisites(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao: boolean hasCompletedAllPrerequisites(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao: boolean hasDependents(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao: void insertDependency(androidx.work.impl.model.Dependency)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao: java.lang.Long getLongValue(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao: androidx.lifecycle.LiveData getObservableLongValue(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao: void insertPreference(androidx.work.impl.model.Preference)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao: java.util.List getWorkInfoPojos(androidx.sqlite.db.SupportSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao: androidx.lifecycle.LiveData getWorkInfoPojosLiveData(androidx.sqlite.db.SupportSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao: androidx.work.impl.model.SystemIdInfo getSystemIdInfo(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao: void insertSystemIdInfo(androidx.work.impl.model.SystemIdInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao: void removeSystemIdInfo(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao: java.util.List getNamesForWorkSpecId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao: java.util.List getWorkSpecIdsWithName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao: void insert(androidx.work.impl.model.WorkName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao: void delete(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao: androidx.work.Data getProgressForWorkSpecId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao: java.util.List getProgressForWorkSpecIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao: void insert(androidx.work.impl.model.WorkProgress)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: void delete(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getAllEligibleWorkSpecsForScheduling(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getEligibleWorkForScheduling(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getInputsFromPrerequisites(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getRecentlyCompletedWork(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.lifecycle.LiveData getScheduleRequestedAtLiveData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.work.WorkInfo$State getState(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getUnfinishedWorkWithName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getUnfinishedWorkWithTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getWorkSpecIdAndStatesForName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.work.impl.model.WorkSpec[] getWorkSpecs(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.work.impl.model.WorkSpec$WorkInfoPojo getWorkStatusPojoForId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getWorkStatusPojoForIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getWorkStatusPojoForName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: java.util.List getWorkStatusPojoForTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: int incrementWorkSpecRunAttemptCount(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: void insertWorkSpec(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: int markWorkSpecScheduled(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: int resetWorkSpecRunAttemptCount(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: void setOutput(java.lang.String,androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: void setPeriodStartTime(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao: int setState(androidx.work.WorkInfo$State,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao: java.util.List getTagsForWorkSpecId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao: java.util.List getWorkSpecIdsWithTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao: void insert(androidx.work.impl.model.WorkTag)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper$Builder: void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.WorkDatabase,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.WorkerWrapper$Builder withRuntimeExtras(androidx.work.WorkerParameters$RuntimeExtras)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.WorkerWrapper$Builder withSchedulers(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper$Builder: androidx.work.impl.WorkerWrapper$Builder withWorker(androidx.work.ListenableWorker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.Dependency: void <init>(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.Preference: void <init>(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.Preference: void <init>(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.Preference: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfo: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfo: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkName: void <init>(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgress: void <init>(java.lang.String,androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec$WorkInfoPojo: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTag: void <init>(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Scheduler: void cancel(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Scheduler: void schedule(androidx.work.impl.model.WorkSpec[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Schedulers: androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Schedulers: void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.Schedulers: androidx.work.impl.Scheduler tryCreateGcmBasedScheduler(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List,androidx.work.impl.Processor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance()>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkManagerImpl getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void initialize(android.content.Context,androidx.work.Configuration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void internalInit(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List,androidx.work.impl.Processor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void setDelegate(androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.WorkContinuation beginUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.WorkContinuation beginWith(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.Operation cancelAllWorkByTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.Operation cancelUniqueWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.Operation cancelWorkById(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: android.app.PendingIntent createCancelPendingIntent(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: java.util.List createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.impl.WorkContinuationImpl createWorkContinuationForUniquePeriodicWork(java.lang.String,androidx.work.ExistingPeriodicWorkPolicy,androidx.work.PeriodicWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.Operation enqueue(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.Operation enqueueUniquePeriodicWork(java.lang.String,androidx.work.ExistingPeriodicWorkPolicy,androidx.work.PeriodicWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.work.Operation enqueueUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: com.google.common.util.concurrent.ListenableFuture getWorkInfoById(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.lifecycle.LiveData getWorkInfoByIdLiveData(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: com.google.common.util.concurrent.ListenableFuture getWorkInfos(androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.lifecycle.LiveData getWorkInfosById(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: com.google.common.util.concurrent.ListenableFuture getWorkInfosByTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.lifecycle.LiveData getWorkInfosByTagLiveData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: com.google.common.util.concurrent.ListenableFuture getWorkInfosForUniqueWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.lifecycle.LiveData getWorkInfosForUniqueWorkLiveData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: androidx.lifecycle.LiveData getWorkInfosLiveData(androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void setReschedulePendingResult(android.content.BroadcastReceiver$PendingResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void startWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void startWork(java.lang.String,androidx.work.WorkerParameters$RuntimeExtras)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void stopForegroundWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl: void stopWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PreferenceUtils: void <init>(androidx.work.impl.WorkDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PreferenceUtils: void migrateLegacyPreferences(android.content.Context,androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PreferenceUtils: void setLastCancelAllTimeMillis(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PreferenceUtils: void setNeedsReschedule(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: androidx.work.multiprocess.RemoteWorkManager getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: androidx.work.multiprocess.RemoteWorkContinuation beginUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: androidx.work.multiprocess.RemoteWorkContinuation beginUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: androidx.work.multiprocess.RemoteWorkContinuation beginWith(androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: androidx.work.multiprocess.RemoteWorkContinuation beginWith(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture cancelAllWorkByTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture cancelUniqueWork(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture cancelWorkById(java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture enqueue(androidx.work.WorkContinuation)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture enqueue(androidx.work.WorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture enqueue(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture enqueueUniquePeriodicWork(java.lang.String,androidx.work.ExistingPeriodicWorkPolicy,androidx.work.PeriodicWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture enqueueUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture enqueueUniqueWork(java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture getWorkInfos(androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkManager: com.google.common.util.concurrent.ListenableFuture setProgress(java.util.UUID,androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkContinuationImpl: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkContinuationImpl: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkContinuationImpl: void <init>(androidx.work.impl.WorkManagerImpl,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkContinuationImpl: boolean hasCycles(androidx.work.impl.WorkContinuationImpl,java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkContinuationImpl: java.util.Set prerequisitesFor(androidx.work.impl.WorkContinuationImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkContinuationImpl: androidx.work.WorkContinuation combineInternal(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkContinuationImpl: androidx.work.WorkContinuation then(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkContinuation: androidx.work.multiprocess.RemoteWorkContinuation combine(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkContinuation: androidx.work.multiprocess.RemoteWorkContinuation combineInternal(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkContinuation: androidx.work.multiprocess.RemoteWorkContinuation then(androidx.work.OneTimeWorkRequest)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.RemoteWorkContinuation: androidx.work.multiprocess.RemoteWorkContinuation then(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase$1: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase$1: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase$2: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$1: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$1: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$2: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$2: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$3: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$3: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$4: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$4: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$5: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$5: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$6: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$6: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$7: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$7: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$RescheduleMigration: void <init>(android.content.Context,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$RescheduleMigration: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$WorkMigration9To10: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabaseMigrations$WorkMigration9To10: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabasePathHelper: java.io.File getDatabasePath(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabasePathHelper: java.io.File getDefaultDatabasePath(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabasePathHelper: java.io.File getNoBackupPath(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabasePathHelper: void migrateDatabase(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabasePathHelper: java.util.Map migrationPaths(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: void <init>(androidx.work.impl.WorkDatabase_Impl,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl$1: androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkDatabase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl$1: void <init>(androidx.work.impl.WorkManagerImpl,androidx.work.impl.utils.futures.SettableFuture,androidx.work.impl.utils.PreferenceUtils)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl$2: void <init>(androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl$2: androidx.work.WorkInfo apply(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkManagerImpl$2: java.lang.Object apply(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkRequestHolder: void <init>(java.util.UUID,androidx.work.impl.model.WorkSpec,java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper$1: void <init>(androidx.work.impl.WorkerWrapper,com.google.common.util.concurrent.ListenableFuture,androidx.work.impl.utils.futures.SettableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.WorkerWrapper$2: void <init>(androidx.work.impl.WorkerWrapper,androidx.work.impl.utils.futures.SettableFuture,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.GcmScheduler: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.GcmScheduler: void cancel(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.GcmScheduler: void schedule(androidx.work.impl.model.WorkSpec[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.GcmTaskConverter: com.google.android.gms.gcm.Task$Builder applyConstraints(com.google.android.gms.gcm.Task$Builder,androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.GcmTaskConverter: com.google.android.gms.gcm.OneoffTask convert(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.Task: void <init>(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.OneoffTask: void <init>(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher$1: void <init>(androidx.work.impl.background.gcm.WorkManagerGcmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher: void <init>(android.content.Context,androidx.work.impl.utils.WorkTimer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher: int reschedule(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher: int onRunTask(com.google.android.gms.gcm.TaskParams)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkTimer: void startTimer(java.lang.String,long,androidx.work.impl.utils.WorkTimer$TimeLimitExceededListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkTimer: void stopTimer(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkTimer$TimeLimitExceededListener: void onTimeLimitExceeded(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher$2: void <init>(androidx.work.impl.background.gcm.WorkManagerGcmDispatcher,androidx.work.impl.WorkDatabase,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher$WorkSpecExecutionListener: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher$WorkSpecExecutionListener: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher$WorkSpecTimeLimitExceededListener: void <init>(androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmDispatcher$WorkSpecTimeLimitExceededListener: void onTimeLimitExceeded(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.gcm.WorkManagerGcmService: int onRunTask(com.google.android.gms.gcm.TaskParams)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.internal.gcm.zzl: com.google.android.gms.internal.gcm.zzo zzd(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.internal.gcm.zzl: com.google.android.gms.internal.gcm.zzo zzl(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.DelayedWorkTracker$1: void <init>(androidx.work.impl.background.greedy.DelayedWorkTracker,androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.DelayedWorkTracker: void <init>(androidx.work.impl.background.greedy.GreedyScheduler,androidx.work.RunnableScheduler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.DelayedWorkTracker: void schedule(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.DelayedWorkTracker: void unschedule(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl,androidx.work.impl.constraints.WorkConstraintsTracker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void removeConstraintTrackingFor(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void cancel(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void onAllConstraintsMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void onAllConstraintsNotMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void schedule(androidx.work.impl.model.WorkSpec[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.greedy.GreedyScheduler: void setDelayedWorkTracker(androidx.work.impl.background.greedy.DelayedWorkTracker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsCallback: void onAllConstraintsMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsCallback: void onAllConstraintsNotMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.constraints.WorkConstraintsCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsTracker: void <init>(androidx.work.impl.constraints.WorkConstraintsCallback,androidx.work.impl.constraints.controllers.ConstraintController[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsTracker: boolean areAllConstraintsMet(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsTracker: void onConstraintMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsTracker: void onConstraintNotMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.WorkConstraintsTracker: void replace(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback: void onConstraintMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback: void onConstraintNotMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: void updateCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: boolean isWorkSpecConstrained(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: void onConstraintChanged(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: void replace(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.ConstraintController: void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.ConstraintListener: void onConstraintChanged(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.ConstraintTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.ConstraintTracker: void addListener(androidx.work.impl.constraints.ConstraintListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.ConstraintTracker: void removeListener(androidx.work.impl.constraints.ConstraintListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.ConstraintTracker: void setState(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.Alarms: void cancelAlarm(android.content.Context,androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.Alarms: void cancelExactAlarm(android.content.Context,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.Alarms: void setAlarm(android.content.Context,androidx.work.impl.WorkManagerImpl,java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.Alarms: void setExactAlarm(android.content.Context,java.lang.String,int,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createConstraintsChangedIntent(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createDelayMetIntent(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createExecutionCompletedIntent(android.content.Context,java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createRescheduleIntent(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createScheduleWorkIntent(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: android.content.Intent createStopWorkIntent(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void handleConstraintsChanged(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void handleDelayMet(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void handleExecutionCompleted(android.content.Intent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void handleReschedule(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void handleScheduleWorkIntent(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void handleStopWork(android.content.Intent,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: boolean hasKeys(android.os.Bundle,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.CommandHandler: void onHandleIntent(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher: void <init>(android.content.Context,androidx.work.impl.Processor,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher: boolean hasIntentWithAction(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher: boolean add(android.content.Intent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher: void postOnMainThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher: void setCompletedListener(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$CommandsCompletedListener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxy: void updateAll(android.content.Context,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxy: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver$1: void <init>(androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver,android.content.Intent,android.content.Context,android.content.BroadcastReceiver$PendingResult)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: android.content.Intent newConstraintProxyUpdateIntent(android.content.Context,boolean,boolean,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.ConstraintsCommandHandler: void <init>(android.content.Context,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.DelayMetCommandHandler: void <init>(android.content.Context,int,java.lang.String,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.DelayMetCommandHandler: void onAllConstraintsMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.DelayMetCommandHandler: void onAllConstraintsNotMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.DelayMetCommandHandler: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.DelayMetCommandHandler: void onTimeLimitExceeded(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.RescheduleReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$1: void <init>(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$AddRunnable: void <init>(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher,android.content.Intent,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion: void <init>(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: void scheduleWorkSpec(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: void cancel(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmScheduler: void schedule(androidx.work.impl.model.WorkSpec[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemalarm.SystemAlarmService: int onStartCommand(android.content.Intent,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobInfoConverter: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobInfoConverter: android.app.job.JobInfo$TriggerContentUri convertContentUriTrigger(androidx.work.ContentUriTriggers$Trigger)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobInfoConverter: int convertNetworkType(androidx.work.NetworkType)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobInfoConverter: void setRequiredNetwork(android.app.job.JobInfo$Builder,androidx.work.NetworkType)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobInfoConverter: android.app.job.JobInfo convert(androidx.work.impl.model.WorkSpec,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl,android.app.job.JobScheduler,androidx.work.impl.background.systemjob.SystemJobInfoConverter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: void cancelAll(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: void cancelJobById(android.app.job.JobScheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: java.util.List getPendingJobIds(android.content.Context,android.app.job.JobScheduler,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: java.util.List getPendingJobs(android.content.Context,android.app.job.JobScheduler)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: java.lang.String getWorkSpecIdFromJobInfo(android.app.job.JobInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: void cancel(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: void schedule(androidx.work.impl.model.WorkSpec[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobScheduler: void scheduleInternal(androidx.work.impl.model.WorkSpec,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobService: java.lang.String getWorkSpecIdFromJobParameters(android.app.job.JobParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobService: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobService: boolean onStartJob(android.app.job.JobParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.background.systemjob.SystemJobService: boolean onStopJob(android.app.job.JobParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.NetworkState: void <init>(boolean,boolean,boolean,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.NetworkState: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryChargingController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryChargingController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryChargingController: boolean isConstrained(java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryChargingController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryNotLowController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryNotLowController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryNotLowController: boolean isConstrained(java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.BatteryNotLowController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkConnectedController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkConnectedController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkConnectedController: boolean isConstrained(androidx.work.impl.constraints.NetworkState)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkConnectedController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkMeteredController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkMeteredController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkMeteredController: boolean isConstrained(androidx.work.impl.constraints.NetworkState)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkMeteredController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkNotRoamingController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkNotRoamingController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkNotRoamingController: boolean isConstrained(androidx.work.impl.constraints.NetworkState)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkNotRoamingController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkUnmeteredController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkUnmeteredController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkUnmeteredController: boolean isConstrained(androidx.work.impl.constraints.NetworkState)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.NetworkUnmeteredController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.StorageNotLowController: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.StorageNotLowController: boolean hasConstraint(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.StorageNotLowController: boolean isConstrained(java.lang.Boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.controllers.StorageNotLowController: boolean isConstrained(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BatteryChargingTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BatteryChargingTracker: boolean isBatteryChangedIntentCharging(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BatteryChargingTracker: void onBroadcastReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker: void onBroadcastReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BatteryNotLowTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BatteryNotLowTracker: void onBroadcastReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker$1: void <init>(androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker$1: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.ConstraintTracker$1: void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateBroadcastReceiver: void <init>(androidx.work.impl.constraints.trackers.NetworkStateTracker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.NetworkStateTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateCallback: void <init>(androidx.work.impl.constraints.trackers.NetworkStateTracker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.NetworkStateTracker$NetworkStateCallback: void onLost(android.net.Network)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.StorageNotLowTracker: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.StorageNotLowTracker: void onBroadcastReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.Trackers: void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.Trackers: androidx.work.impl.constraints.trackers.Trackers getInstance(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.constraints.trackers.Trackers: void setInstance(androidx.work.impl.constraints.trackers.Trackers)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.diagnostics.DiagnosticsReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher$1: void <init>(androidx.work.impl.foreground.SystemForegroundDispatcher,androidx.work.impl.WorkDatabase,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void <init>(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl,androidx.work.impl.constraints.WorkConstraintsTracker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: android.content.Intent createCancelWorkIntent(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: android.content.Intent createNotifyIntent(android.content.Context,java.lang.String,androidx.work.ForegroundInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: android.content.Intent createStartForegroundIntent(android.content.Context,java.lang.String,androidx.work.ForegroundInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: android.content.Intent createStopForegroundIntent(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void handleCancelWork(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void handleNotify(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void handleStartForeground(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void handleStop(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void onAllConstraintsMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void onAllConstraintsNotMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void onExecuted(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void onStartCommand(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher: void setCallback(androidx.work.impl.foreground.SystemForegroundDispatcher$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher$Callback: void cancelNotification(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher$Callback: void notify(int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundDispatcher$Callback: void startForeground(int,int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundService$1: void <init>(androidx.work.impl.foreground.SystemForegroundService,int,android.app.Notification,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundService: void cancelNotification(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundService: void notify(int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundService: int onStartCommand(android.content.Intent,int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundService: void startForeground(int,int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundService$2: void <init>(androidx.work.impl.foreground.SystemForegroundService,int,android.app.Notification)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.foreground.SystemForegroundService$3: void <init>(androidx.work.impl.foreground.SystemForegroundService,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl$1: void <init>(androidx.work.impl.model.DependencyDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.Dependency)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl: java.util.List getDependentWorkIds(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl: java.util.List getPrerequisites(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl: boolean hasCompletedAllPrerequisites(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl: boolean hasDependents(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.DependencyDao_Impl: void insertDependency(androidx.work.impl.model.Dependency)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl$1: void <init>(androidx.work.impl.model.PreferenceDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.Preference)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl: java.lang.Long getLongValue(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl: androidx.lifecycle.LiveData getObservableLongValue(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl: void insertPreference(androidx.work.impl.model.Preference)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.PreferenceDao_Impl$2: void <init>(androidx.work.impl.model.PreferenceDao_Impl,androidx.room.RoomSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao_Impl$1: void <init>(androidx.work.impl.model.RawWorkInfoDao_Impl,androidx.sqlite.db.SupportSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao_Impl: java.util.List getWorkInfoPojos(androidx.sqlite.db.SupportSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.RawWorkInfoDao_Impl: androidx.lifecycle.LiveData getWorkInfoPojosLiveData(androidx.sqlite.db.SupportSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl$1: void <init>(androidx.work.impl.model.SystemIdInfoDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.SystemIdInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl: androidx.work.impl.model.SystemIdInfo getSystemIdInfo(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl: void insertSystemIdInfo(androidx.work.impl.model.SystemIdInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl: void removeSystemIdInfo(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.SystemIdInfoDao_Impl$2: void <init>(androidx.work.impl.model.SystemIdInfoDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao_Impl$1: void <init>(androidx.work.impl.model.WorkNameDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao_Impl: java.util.List getNamesForWorkSpecId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao_Impl: java.util.List getWorkSpecIdsWithName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkNameDao_Impl: void insert(androidx.work.impl.model.WorkName)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl$1: void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkProgress)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl: void delete(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl: androidx.work.Data getProgressForWorkSpecId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl: java.util.List getProgressForWorkSpecIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl: void insert(androidx.work.impl.model.WorkProgress)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl$2: void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkProgressDao_Impl$3: void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec$1: java.lang.Object apply(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec$1: java.util.List apply(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpec$IdAndState: boolean equals(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$10: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: void delete(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getAllEligibleWorkSpecsForScheduling(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getEligibleWorkForScheduling(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getInputsFromPrerequisites(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getRecentlyCompletedWork(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.lifecycle.LiveData getScheduleRequestedAtLiveData(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.work.WorkInfo$State getState(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getUnfinishedWorkWithName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getUnfinishedWorkWithTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getWorkSpecIdAndStatesForName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.work.impl.model.WorkSpec[] getWorkSpecs(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.work.impl.model.WorkSpec$WorkInfoPojo getWorkStatusPojoForId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getWorkStatusPojoForIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getWorkStatusPojoForName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: java.util.List getWorkStatusPojoForTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForIds(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: int incrementWorkSpecRunAttemptCount(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: void insertWorkSpec(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: int markWorkSpecScheduled(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: int resetWorkSpecRunAttemptCount(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: void setOutput(java.lang.String,androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: void setPeriodStartTime(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl: int setState(androidx.work.WorkInfo$State,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$11: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$12: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$13: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$14: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomSQLiteQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$1: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$2: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$3: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$4: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$5: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$6: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$7: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$8: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkSpecDao_Impl$9: void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao_Impl$1: void <init>(androidx.work.impl.model.WorkTagDao_Impl,androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkTag)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao_Impl: void <init>(androidx.room.RoomDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao_Impl: java.util.List getTagsForWorkSpecId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao_Impl: java.util.List getWorkSpecIdsWithTag(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTagDao_Impl: void insert(androidx.work.impl.model.WorkTag)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: int backoffPolicyToInt(androidx.work.BackoffPolicy)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: androidx.work.ContentUriTriggers byteArrayToContentUriTriggers(byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: byte[] contentUriTriggersToByteArray(androidx.work.ContentUriTriggers)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: androidx.work.BackoffPolicy intToBackoffPolicy(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: androidx.work.NetworkType intToNetworkType(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: androidx.work.WorkInfo$State intToState(int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: int networkTypeToInt(androidx.work.NetworkType)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: int outOfQuotaPolicyToInt(androidx.work.OutOfQuotaPolicy)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.model.WorkTypeConverters: int stateToInt(androidx.work.WorkInfo$State)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable$1: void <init>(androidx.work.impl.WorkManagerImpl,java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable: androidx.work.impl.utils.CancelWorkRunnable forAll(androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable: androidx.work.impl.utils.CancelWorkRunnable forId(java.util.UUID,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable: androidx.work.impl.utils.CancelWorkRunnable forName(java.lang.String,androidx.work.impl.WorkManagerImpl,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable: androidx.work.impl.utils.CancelWorkRunnable forTag(java.lang.String,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable: void iterativelyCancelWorkAndDependents(androidx.work.impl.WorkDatabase,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable: void cancel(androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable: void reschedulePendingWorkers(androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable$2: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable$3: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.CancelWorkRunnable$4: void <init>(androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.EnqueueRunnable: void <init>(androidx.work.impl.WorkContinuationImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.EnqueueRunnable: boolean enqueueContinuation(androidx.work.impl.WorkContinuationImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.EnqueueRunnable: boolean enqueueWorkWithPrerequisites(androidx.work.impl.WorkManagerImpl,java.util.List,java.lang.String[],java.lang.String,androidx.work.ExistingWorkPolicy)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.EnqueueRunnable: boolean processContinuation(androidx.work.impl.WorkContinuationImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.EnqueueRunnable: void tryDelegateConstrainedWorkSpec(androidx.work.impl.model.WorkSpec)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.EnqueueRunnable: boolean usesScheduler(androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ForceStopRunnable: void <init>(android.content.Context,androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ForceStopRunnable: android.content.Intent getIntent(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ForceStopRunnable: android.app.PendingIntent getPendingIntent(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ForceStopRunnable: void setAlarm(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ForceStopRunnable: void sleep(long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.IdGenerator: void <init>(androidx.work.impl.WorkDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.IdGenerator: void migrateLegacyIdGenerator(android.content.Context,androidx.sqlite.db.SupportSQLiteDatabase)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.IdGenerator: int nextId(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.IdGenerator: void update(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.IdGenerator: int nextJobSchedulerIdWithRange(int,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.LiveDataUtils$1$1: void <init>(androidx.work.impl.utils.LiveDataUtils$1,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.LiveDataUtils$1: void <init>(androidx.work.impl.utils.taskexecutor.TaskExecutor,java.lang.Object,androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.LiveDataUtils$1: void onChanged(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.LiveDataUtils: androidx.lifecycle.LiveData dedupedMappedLiveDataFor(androidx.lifecycle.LiveData,androidx.arch.core.util.Function,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PackageManagerHelper: boolean isComponentExplicitlyEnabled(android.content.Context,java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PackageManagerHelper: boolean isComponentExplicitlyEnabled(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PackageManagerHelper: void setComponentEnabled(android.content.Context,java.lang.Class,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PreferenceUtils$1: void <init>(androidx.work.impl.utils.PreferenceUtils)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PreferenceUtils$1: java.lang.Long apply(java.lang.Long)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PreferenceUtils$1: java.lang.Object apply(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ProcessUtils: java.lang.String getProcessName(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.ProcessUtils: boolean isDefaultProcess(android.content.Context,androidx.work.Configuration)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.PruneWorkRunnable: void <init>(androidx.work.impl.WorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.RawQueries: void bindings(java.lang.StringBuilder,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.RawQueries: androidx.sqlite.db.SupportSQLiteQuery workQueryToRawQuery(androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.SerialExecutor$Task: void <init>(androidx.work.impl.utils.SerialExecutor,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StartWorkRunnable: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.WorkerParameters$RuntimeExtras)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable$1: void <init>(androidx.work.impl.WorkManagerImpl,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable: androidx.work.impl.utils.StatusRunnable forStringIds(androidx.work.impl.WorkManagerImpl,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable: androidx.work.impl.utils.StatusRunnable forTag(androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable: androidx.work.impl.utils.StatusRunnable forUUID(androidx.work.impl.WorkManagerImpl,java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable: androidx.work.impl.utils.StatusRunnable forUniqueWork(androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable: androidx.work.impl.utils.StatusRunnable forWorkQuerySpec(androidx.work.impl.WorkManagerImpl,androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable$2: void <init>(androidx.work.impl.WorkManagerImpl,java.util.UUID)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable$3: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable$4: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StatusRunnable$5: void <init>(androidx.work.impl.WorkManagerImpl,androidx.work.WorkQuery)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.StopWorkRunnable: void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.SynchronousExecutor: void execute(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WakeLocks: android.os.PowerManager$WakeLock newWakeLock(android.content.Context,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkForegroundRunnable$1: void <init>(androidx.work.impl.utils.WorkForegroundRunnable,androidx.work.impl.utils.futures.SettableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkForegroundRunnable: void <init>(android.content.Context,androidx.work.impl.model.WorkSpec,androidx.work.ListenableWorker,androidx.work.ForegroundUpdater,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkForegroundRunnable$2: void <init>(androidx.work.impl.utils.WorkForegroundRunnable,androidx.work.impl.utils.futures.SettableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkForegroundUpdater$1: void <init>(androidx.work.impl.utils.WorkForegroundUpdater,androidx.work.impl.utils.futures.SettableFuture,java.util.UUID,androidx.work.ForegroundInfo,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkForegroundUpdater: void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkForegroundUpdater: com.google.common.util.concurrent.ListenableFuture setForegroundAsync(android.content.Context,java.util.UUID,androidx.work.ForegroundInfo)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkProgressUpdater$1: void <init>(androidx.work.impl.utils.WorkProgressUpdater,java.util.UUID,androidx.work.Data,androidx.work.impl.utils.futures.SettableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkProgressUpdater: void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.utils.taskexecutor.TaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkProgressUpdater: com.google.common.util.concurrent.ListenableFuture updateProgress(android.content.Context,java.util.UUID,androidx.work.Data)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkTimer$1: void <init>(androidx.work.impl.utils.WorkTimer)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkTimer$1: java.lang.Thread newThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.WorkTimer$WorkTimerRunnable: void <init>(androidx.work.impl.utils.WorkTimer,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$Cancellation: void <init>(boolean,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$Failure$1: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$Failure: void <init>(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper: void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SetFuture: void <init>(androidx.work.impl.utils.futures.AbstractFuture,com.google.common.util.concurrent.ListenableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper: boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper: boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper: boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper: void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper: void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.DirectExecutor: void <init>(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.futures.DirectExecutor: void execute(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1: void <init>(androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1: void execute(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: void <init>(java.util.concurrent.Executor)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: void executeOnBackgroundThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor: void postToMainThread(java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.CombineContinuationsWorker: void <init>(android.content.Context,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.ConstraintTrackingWorker$1: void <init>(androidx.work.impl.workers.ConstraintTrackingWorker)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.ConstraintTrackingWorker: void <init>(android.content.Context,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.ConstraintTrackingWorker: void onAllConstraintsMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.ConstraintTrackingWorker: void onAllConstraintsNotMet(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.ConstraintTrackingWorker$2: void <init>(androidx.work.impl.workers.ConstraintTrackingWorker,com.google.common.util.concurrent.ListenableFuture)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.DiagnosticsWorker: void <init>(android.content.Context,androidx.work.WorkerParameters)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.DiagnosticsWorker: java.lang.String workSpecRow(androidx.work.impl.model.WorkSpec,java.lang.String,java.lang.Integer,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.impl.workers.DiagnosticsWorker: java.lang.String workSpecRows(androidx.work.impl.model.WorkNameDao,androidx.work.impl.model.WorkTagDao,androidx.work.impl.model.SystemIdInfoDao,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Default: void interrupt(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Default: void startWork(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl: void interrupt(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl: void startWork(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback: void onFailure(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback: void onSuccess(byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy: void <init>(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy: void interrupt(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy: void startWork(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Stub: androidx.work.multiprocess.IListenableWorkerImpl asInterface(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Stub: boolean setDefaultImpl(androidx.work.multiprocess.IListenableWorkerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IListenableWorkerImpl$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void cancelAllWork(androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void cancelAllWorkByTag(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void cancelUniqueWork(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void cancelWorkById(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void enqueueContinuation(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void enqueueWorkRequests(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void queryWorkInfo(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Default: void setProgress(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void cancelAllWork(androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void cancelAllWorkByTag(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void cancelUniqueWork(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void cancelWorkById(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void enqueueContinuation(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void enqueueWorkRequests(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void queryWorkInfo(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl: void setProgress(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void <init>(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void cancelAllWork(androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void cancelAllWorkByTag(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void cancelUniqueWork(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void cancelWorkById(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void enqueueContinuation(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void enqueueWorkRequests(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void queryWorkInfo(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy: void setProgress(byte[],androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub: androidx.work.multiprocess.IWorkManagerImpl asInterface(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub: boolean setDefaultImpl(androidx.work.multiprocess.IWorkManagerImpl)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImpl$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Default: void onFailure(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Default: void onSuccess(byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy: void <init>(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy: void onFailure(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy: void onSuccess(byte[])>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Stub: androidx.work.multiprocess.IWorkManagerImplCallback asInterface(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Stub: boolean setDefaultImpl(androidx.work.multiprocess.IWorkManagerImplCallback)>
[main] WARN  firmproj.main.Main - not match type:Ldalvik/annotation/MethodParameters; method: <androidx.work.multiprocess.IWorkManagerImplCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.JsonElement: char getAsCharacter()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.JsonNull: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Response: java.lang.Object body()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Response: okhttp3.ResponseBody errorBody()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Request: okhttp3.RequestBody '-deprecated_body'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Request: okhttp3.CacheControl '-deprecated_cacheControl'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Request: okhttp3.Headers '-deprecated_headers'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Request: java.lang.String '-deprecated_method'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Request: okhttp3.HttpUrl '-deprecated_url'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.ResponseBody '-deprecated_body'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.CacheControl '-deprecated_cacheControl'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.Response '-deprecated_cacheResponse'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: int '-deprecated_code'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.Handshake '-deprecated_handshake'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.Headers '-deprecated_headers'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: java.lang.String '-deprecated_message'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.Response '-deprecated_networkResponse'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.Response '-deprecated_priorResponse'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.Protocol '-deprecated_protocol'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: long '-deprecated_receivedResponseAtMillis'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: okhttp3.Request '-deprecated_request'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Response: long '-deprecated_sentRequestAtMillis'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Headers: okhttp3.Headers of(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Headers: okhttp3.Headers of(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Headers: int '-deprecated_size'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: boolean '-deprecated_immutable'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: int '-deprecated_maxAgeSeconds'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: int '-deprecated_maxStaleSeconds'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: int '-deprecated_minFreshSeconds'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: boolean '-deprecated_mustRevalidate'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: boolean '-deprecated_noCache'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: boolean '-deprecated_noStore'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: boolean '-deprecated_noTransform'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: boolean '-deprecated_onlyIfCached'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CacheControl: int '-deprecated_sMaxAgeSeconds'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl: int defaultPort(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_encodedFragment'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_encodedPassword'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_encodedPath'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.util.List '-deprecated_encodedPathSegments'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_encodedQuery'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_encodedUsername'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_fragment'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_host'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_password'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.util.List '-deprecated_pathSegments'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: int '-deprecated_pathSize'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: int '-deprecated_port'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_query'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.util.Set '-deprecated_queryParameterNames'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: int '-deprecated_querySize'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_scheme'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.net.URI '-deprecated_uri'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.net.URL '-deprecated_url'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl: java.lang.String '-deprecated_username'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MediaType: java.lang.String '-deprecated_subtype'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MediaType: java.lang.String '-deprecated_type'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.BufferedSource: okio.Buffer buffer()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString decodeBase64(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString decodeHex(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString of(java.nio.ByteBuffer)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString of(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString of(byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString: okio.ByteString read(java.io.InputStream,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString: byte '-deprecated_getByte'(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString: int '-deprecated_size'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Handshake: okhttp3.CipherSuite '-deprecated_cipherSuite'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Handshake: java.util.List '-deprecated_localCertificates'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Handshake: java.security.Principal '-deprecated_localPrincipal'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Handshake: java.util.List '-deprecated_peerCertificates'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Handshake: java.security.Principal '-deprecated_peerPrincipal'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Handshake: okhttp3.TlsVersion '-deprecated_tlsVersion'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Headers$Companion: okhttp3.Headers '-deprecated_of'(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Headers$Companion: okhttp3.Headers '-deprecated_of'(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Headers$Companion: okhttp3.Headers of(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Headers$Companion: okhttp3.Headers of(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.BufferedSink: okio.Buffer buffer()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CacheControl$Companion: okhttp3.CacheControl parse(okhttp3.Headers)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl '-deprecated_get'(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl '-deprecated_get'(java.net.URI)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl '-deprecated_get'(java.net.URL)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl '-deprecated_parse'(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl$Companion: int defaultPort(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URI)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URL)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.HttpUrl$Companion: okhttp3.HttpUrl parse(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MediaType$Companion: okhttp3.MediaType '-deprecated_get'(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MediaType$Companion: okhttp3.MediaType '-deprecated_parse'(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MediaType$Companion: okhttp3.MediaType get(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MediaType$Companion: okhttp3.MediaType parse(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.Buffer: byte '-deprecated_getByte'(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.Buffer: long '-deprecated_size'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.Options: okio.Options of(okio.ByteString[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString$Companion: okio.ByteString '-deprecated_decodeBase64'(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString$Companion: okio.ByteString '-deprecated_decodeHex'(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString$Companion: okio.ByteString '-deprecated_encodeString'(java.lang.String,java.nio.charset.Charset)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString$Companion: okio.ByteString '-deprecated_encodeUtf8'(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString$Companion: okio.ByteString '-deprecated_of'(java.nio.ByteBuffer)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString$Companion: okio.ByteString '-deprecated_of'(byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ByteString$Companion: okio.ByteString '-deprecated_read'(java.io.InputStream,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString decodeBase64(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString decodeHex(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString encodeUtf8(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString of(java.nio.ByteBuffer)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString of(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString of(byte[],int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.ByteString$Companion: okio.ByteString read(java.io.InputStream,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Handshake$Companion: okhttp3.Handshake '-deprecated_get'(javax.net.ssl.SSLSession)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Handshake$Companion: okhttp3.Handshake get(javax.net.ssl.SSLSession)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Handshake$Companion: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CipherSuite: java.lang.String '-deprecated_javaName'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.TlsVersion: java.lang.String '-deprecated_javaName'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Protocol$Companion: okhttp3.Protocol get(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.Options$Companion: okio.Options of(okio.ByteString[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.Authenticator '-deprecated_authenticator'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.Cache '-deprecated_cache'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: int '-deprecated_callTimeoutMillis'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.CertificatePinner '-deprecated_certificatePinner'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: int '-deprecated_connectTimeoutMillis'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.ConnectionPool '-deprecated_connectionPool'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: java.util.List '-deprecated_connectionSpecs'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.CookieJar '-deprecated_cookieJar'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.Dispatcher '-deprecated_dispatcher'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.Dns '-deprecated_dns'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.EventListener$Factory '-deprecated_eventListenerFactory'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: boolean '-deprecated_followRedirects'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: boolean '-deprecated_followSslRedirects'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier '-deprecated_hostnameVerifier'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: java.util.List '-deprecated_interceptors'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: java.util.List '-deprecated_networkInterceptors'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: int '-deprecated_pingIntervalMillis'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: java.util.List '-deprecated_protocols'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: java.net.Proxy '-deprecated_proxy'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: okhttp3.Authenticator '-deprecated_proxyAuthenticator'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: java.net.ProxySelector '-deprecated_proxySelector'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: int '-deprecated_readTimeoutMillis'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: boolean '-deprecated_retryOnConnectionFailure'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: javax.net.SocketFactory '-deprecated_socketFactory'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory '-deprecated_sslSocketFactory'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient: int '-deprecated_writeTimeoutMillis'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: okhttp3.CertificatePinner '-deprecated_certificatePinner'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: java.util.List '-deprecated_connectionSpecs'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: okhttp3.Dns '-deprecated_dns'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: javax.net.ssl.HostnameVerifier '-deprecated_hostnameVerifier'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: java.util.List '-deprecated_protocols'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: java.net.Proxy '-deprecated_proxy'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: okhttp3.Authenticator '-deprecated_proxyAuthenticator'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: java.net.ProxySelector '-deprecated_proxySelector'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: javax.net.SocketFactory '-deprecated_socketFactory'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: javax.net.ssl.SSLSocketFactory '-deprecated_sslSocketFactory'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Address: okhttp3.HttpUrl '-deprecated_url'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Route: okhttp3.Address '-deprecated_address'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Route: java.net.Proxy '-deprecated_proxy'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Route: java.net.InetSocketAddress '-deprecated_socketAddress'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CipherSuite$Companion: okhttp3.CipherSuite forJavaName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.TlsVersion$Companion: okhttp3.TlsVersion forJavaName(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cache: java.io.File '-deprecated_directory'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CertificatePinner: okio.ByteString sha1Hash(java.security.cert.X509Certificate)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CertificatePinner: okio.ByteString sha256Hash(java.security.cert.X509Certificate)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Dispatcher: java.util.concurrent.ExecutorService '-deprecated_executorService'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ConnectionSpec: java.util.List '-deprecated_cipherSuites'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ConnectionSpec: boolean '-deprecated_supportsTlsExtensions'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ConnectionSpec: java.util.List '-deprecated_tlsVersions'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Cache$Companion: java.lang.String key(okhttp3.HttpUrl)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CertificatePinner$Companion: java.lang.String pin(java.security.cert.Certificate)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CertificatePinner$Companion: okio.ByteString sha1Hash(java.security.cert.X509Certificate)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.CertificatePinner$Companion: okio.ByteString sha256Hash(java.security.cert.X509Certificate)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/DELETE; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call deleteClient(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/DELETE; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call deleteDevice(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/DELETE; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call deleteUser(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/PUT; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call putSelfFile(java.lang.String,okhttp3.RequestBody)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/PUT; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call updateCommand(java.lang.String,java.lang.String,co.yonomi.thincloud.tcsdk.thincloud.models.Command)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/PUT; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call updateDevice(java.lang.String,co.yonomi.thincloud.tcsdk.thincloud.models.Device)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/PUT; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call updateSelf(co.yonomi.thincloud.tcsdk.thincloud.models.User)>
[main] WARN  firmproj.main.Main - not match type:Lretrofit2/http/PUT; method: <co.yonomi.thincloud.tcsdk.thincloud.APISpec: retrofit2.Call updateUser(java.lang.String,co.yonomi.thincloud.tcsdk.thincloud.models.User)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Retrofit: java.util.concurrent.Executor callbackExecutor()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.ServiceMethod: java.lang.Object invoke(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.CallAdapter$Factory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Converter: java.lang.Object convert(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Converter$Factory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Converter$Factory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Converter$Factory: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Platform: java.util.concurrent.Executor defaultCallbackExecutor()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Platform: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.ArrayList newArrayList(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.ArrayList newArrayListNotNull(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.HashSet newHashSet(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.HashSet newHashSetNotNull(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.LinkedList newLinkedList(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.LinkedList newLinkedListNotNull(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.TreeSet newTreeSet(java.util.Comparator,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.TreeSet newTreeSetNotNull(java.util.Comparator,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.List newUnmodifiableList(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.CollectionUtils: java.util.List newUnmodifiableListNotNull(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.MapUtils: java.util.HashMap newHashMap(android.util.Pair[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.MapUtils: java.util.Hashtable newHashTable(android.util.Pair[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.MapUtils: java.util.LinkedHashMap newLinkedHashMap(android.util.Pair[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.MapUtils: java.util.TreeMap newTreeMap(java.util.Comparator,android.util.Pair[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.blankj.utilcode.util.MapUtils: java.util.Map newUnmodifiableMap(android.util.Pair[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.snackbar.Snackbar: boolean hasSnackbarButtonStyleAttr(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar setCallback(com.google.android.material.snackbar.Snackbar$Callback)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics$Builder: com.crashlytics.android.Crashlytics$Builder delay(float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics$Builder: com.crashlytics.android.Crashlytics$Builder disabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics$Builder: com.crashlytics.android.Crashlytics$Builder listener(com.crashlytics.android.core.CrashlyticsListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics$Builder: com.crashlytics.android.Crashlytics$Builder pinningInfo(com.crashlytics.android.core.PinningInfoProvider)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics: void setPinningInfoProvider(com.crashlytics.android.core.PinningInfoProvider)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics: boolean getDebugMode()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics: void setDebugMode(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.Crashlytics: void setListener(com.crashlytics.android.core.CrashlyticsListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.core.CrashlyticsCore: void setListener(com.crashlytics.android.core.CrashlyticsListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.crashlytics.android.core.CrashlyticsCore$Builder: com.crashlytics.android.core.CrashlyticsCore$Builder pinningInfo(com.crashlytics.android.core.PinningInfoProvider)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.IdManager: java.lang.String createIdHeaderValue(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAdvertisingId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.IdManager: java.lang.String getAndroidId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.IdManager: java.lang.String getBluetoothMacAddress()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.IdManager: java.lang.String getSerialNumber()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.IdManager: java.lang.String getTelephonyId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.settings.AnalyticsSettingsData: void <init>(java.lang.String,int,int,int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.settings.AnalyticsSettingsData: void <init>(java.lang.String,int,int,int,int,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.datatransport.TransportFactory: com.google.android.datatransport.Transport getTransport(java.lang.String,java.lang.Class,com.google.android.datatransport.Transformer)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.datatransport.runtime.EventInternal: byte[] getPayload()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Field; method: <com.google.android.datatransport.cct.internal.BatchedLogRequest: java.util.List getLogRequests()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,double)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,long)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.encoders.ObjectEncoderContext: com.google.firebase.encoders.ObjectEncoderContext add(java.lang.String,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Field; method: <com.google.android.datatransport.cct.internal.LogRequest: java.util.List getLogEvents()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Field; method: <com.google.android.datatransport.cct.internal.AutoValue_BatchedLogRequest: java.util.List getLogRequests()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Field; method: <com.google.android.datatransport.cct.internal.AutoValue_LogRequest: java.util.List getLogEvents()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/BindsInstance; method: <com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder: com.google.android.datatransport.runtime.TransportRuntimeComponent$Builder setApplicationContext(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.TransportRuntime: void <init>(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.Scheduler,com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.datatransport.runtime.TransportRuntime: com.google.android.datatransport.TransportFactory newFactory(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void <init>(android.content.Context,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,java.util.concurrent.Executor,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard,com.google.android.datatransport.runtime.time.Clock)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: void <init>(java.util.concurrent.Executor,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.ExecutionModule: java.util.concurrent.Executor executor()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Singleton; method: <com.google.android.datatransport.runtime.ExecutionModule: java.util.concurrent.Executor executor()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Binds; method: <com.google.android.datatransport.runtime.backends.BackendRegistryModule: com.google.android.datatransport.runtime.backends.BackendRegistry backendRegistry(com.google.android.datatransport.runtime.backends.MetadataBackendRegistry)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.backends.MetadataBackendRegistry: void <init>(android.content.Context,com.google.android.datatransport.runtime.backends.CreationContextFactory)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.backends.CreationContextFactory: void <init>(android.content.Context,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.datatransport.runtime.dagger.internal.DelegateFactory: void setDelegatedProvider(javax.inject.Provider)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: void <init>(java.util.concurrent.Executor,com.google.android.datatransport.runtime.backends.BackendRegistry,com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.synchronization.SynchronizationGuard)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.scheduling.SchedulingConfigModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig config(com.google.android.datatransport.runtime.time.Clock)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.scheduling.SchedulingModule: com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler workScheduler(android.content.Context,com.google.android.datatransport.runtime.scheduling.persistence.EventStore,com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig,com.google.android.datatransport.runtime.time.Clock)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Binds; method: <com.google.android.datatransport.runtime.scheduling.SchedulingModule: com.google.android.datatransport.runtime.scheduling.Scheduler scheduler(com.google.android.datatransport.runtime.scheduling.DefaultScheduler)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: java.lang.String dbName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Named; method: <com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: java.lang.String dbName()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: int schemaVersion()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Named; method: <com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: int schemaVersion()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig storeConfig()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Binds; method: <com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: com.google.android.datatransport.runtime.scheduling.persistence.EventStore eventStore(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Binds; method: <com.google.android.datatransport.runtime.scheduling.persistence.EventStoreModule: com.google.android.datatransport.runtime.synchronization.SynchronizationGuard synchronizationGuard(com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.scheduling.persistence.SQLiteEventStore: void <init>(com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.time.Clock,com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig,com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.google.android.datatransport.runtime.scheduling.persistence.SchemaManager: void <init>(android.content.Context,java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock eventClock()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/android/datatransport/runtime/dagger/Provides; method: <com.google.android.datatransport.runtime.time.TimeModule: com.google.android.datatransport.runtime.time.Clock uptimeClock()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.ClientSettings: android.accounts.Account getAccount()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.internal.ClientSettings: java.lang.String getAccountName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.ClientSettings: java.lang.String getAccountName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.ClientSettings: java.lang.Integer getClientSessionId()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.ClientSettings: java.lang.String getRealClientClassName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.ClientSettings: java.lang.String getRealClientPackageName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.ClientSettings: com.google.android.gms.signin.SignInOptions getSignInOptions()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.ClientSettings: android.view.View getViewForPopups()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void <init>(com.google.android.gms.common.api.Api$AnyClientKey,com.google.android.gms.common.api.GoogleApiClient)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GoogleApiAvailabilityLight: android.content.Intent getErrorResolutionIntent(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.BasePendingResult: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.BasePendingResult: void <init>(android.os.Looper)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInAccount zad(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInOptions zae(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String zaf(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInAccount getSavedDefaultGoogleSignInAccount()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInOptions getSavedDefaultGoogleSignInOptions()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String getSavedRefreshToken()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.AccountPicker: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.GoogleApi: void <init>(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.GoogleApi: void <init>(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,android.os.Looper,com.google.android.gms.common.api.internal.StatusExceptionMapper)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.GoogleApi: void <init>(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.TaskApiCall: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.TaskApiCall$Builder: com.google.android.gms.common.api.internal.TaskApiCall$Builder execute(com.google.android.gms.common.util.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RegistrationMethods$Builder register(com.google.android.gms.common.util.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.RegistrationMethods$Builder: com.google.android.gms.common.api.internal.RegistrationMethods$Builder unregister(com.google.android.gms.common.util.BiConsumer)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.PendingIntent getErrorPendingIntent(int,android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: java.lang.String getErrorString(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: boolean isUserRecoverableError(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: void cancelAvailabilityErrorNotifications(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: void ensurePlayServicesAvailable(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: int getApkVersion(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: int getClientVersion(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: android.app.PendingIntent getErrorPendingIntent(int,android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: java.lang.String getErrorString(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.Intent getGooglePlayServicesAvailabilityRecoveryIntent(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isGooglePlayServicesUid(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isPlayServicesPossiblyUpdating(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isPlayStorePossiblyUpdating(android.content.Context,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isSidewinderDevice(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isUserRecoverableError(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.GooglePlayServicesUtilLight: boolean uidHasPackageName(android.content.Context,int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.zzl: java.lang.String getErrorMessage()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.SignInButton: void setScopes(com.google.android.gms.common.api.Scope[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.SignInButton: void setStyle(int,int,com.google.android.gms.common.api.Scope[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.ApiException: java.lang.String getStatusMessage()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.data.DataBuffer: void close()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.data.DataBuffer: boolean isClosed()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.data.AbstractDataBuffer: void close()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.data.AbstractDataBuffer: boolean isClosed()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.StatusPendingResult: void <init>(android.os.Looper)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.api.internal.TaskUtil: com.google.android.gms.tasks.Task toVoidTaskThatFailsOnFalse(com.google.android.gms.tasks.Task)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.config.GservicesValue: java.lang.Object getBinderSafe()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.internal.AuthAccountRequest: void <init>(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.AuthAccountRequest: java.lang.Integer getOauthPolicy()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.AuthAccountRequest: java.lang.Integer getPolicyAction()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.internal.SignInButtonConfig: com.google.android.gms.common.api.Scope[] getScopes()>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/qual/EnsuresNonNull; method: <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/qual/EnsuresNonNull; method: <com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.zzj: com.google.android.gms.common.zzd zza(android.os.IBinder)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.AndroidUtilsLight: android.content.Context getDeviceProtectedStorageContext(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.CollectionUtils: java.util.List listOf()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.CollectionUtils: java.util.List listOf(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.CollectionUtils: java.util.List listOf(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.CollectionUtils: java.util.Set setOf(java.lang.Object,java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.CollectionUtils: java.util.Set setOf(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.DeviceProperties: boolean isFeaturePhone(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.IOUtils: long copyStream(java.io.InputStream,java.io.OutputStream)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.IOUtils: long copyStream(java.io.InputStream,java.io.OutputStream,boolean,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.IOUtils: byte[] readInputStreamFully(java.io.InputStream)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.IOUtils: byte[] readInputStreamFully(java.io.InputStream,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.IOUtils: byte[] toByteArray(java.io.InputStream)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.IOUtils: long zza(java.io.InputStream,java.io.OutputStream,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.util.ProcessUtils: java.lang.String getMyProcessName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.common.util.ProcessUtils: java.lang.String zzd(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.common.util.SharedPreferencesUtils: void publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GcmPubSub: com.google.android.gms.gcm.GcmPubSub getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GcmPubSub: void subscribe(java.lang.String,java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GcmPubSub: void unsubscribe(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.iid.InstanceID: com.google.android.gms.iid.InstanceID getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.iid.InstanceID: void deleteInstanceID()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.iid.InstanceID: void deleteToken(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.iid.InstanceID: long getCreationTime()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.iid.InstanceID: java.lang.String getId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.iid.InstanceID: java.lang.String getToken(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.iid.InstanceID: java.lang.String getToken(java.lang.String,java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: com.google.android.gms.gcm.GoogleCloudMessaging getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: android.content.Intent zzd(android.os.Bundle,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: java.lang.String zzd(boolean,java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: void close()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: java.lang.String getMessageType(android.content.Intent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: java.lang.String register(java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: void send(java.lang.String,java.lang.String,long,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: void send(java.lang.String,java.lang.String,android.os.Bundle)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.GoogleCloudMessaging: void unregister()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.gcm.PeriodicTask: void <init>(android.os.Parcel)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.internal.gcm.zzn: com.google.android.gms.internal.gcm.zzo zzd(java.lang.String,int)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.internal.gcm.zzn: com.google.android.gms.internal.gcm.zzo zzl(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.location.GeofencingApi: com.google.android.gms.common.api.PendingResult addGeofences(com.google.android.gms.common.api.GoogleApiClient,java.util.List,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.location.zzbd: com.google.android.gms.internal.location.zzbd zza(com.google.android.gms.location.LocationRequest)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.location.zzaf: com.google.android.gms.common.api.PendingResult addGeofences(com.google.android.gms.common.api.GoogleApiClient,java.util.List,android.app.PendingIntent)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzhi: int zzc(int,com.google.android.gms.internal.measurement.zzjj,com.google.android.gms.internal.measurement.zzkb)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzhi: int zzc(com.google.android.gms.internal.measurement.zzjj)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzhi: int zzl(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzlm: void zza(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzlm: void zzb(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzlm: void zzb(int,java.lang.Object,com.google.android.gms.internal.measurement.zzkb)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzlm: void zzb(int,java.util.List,com.google.android.gms.internal.measurement.zzkb)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzjy: java.lang.Object zzb(com.google.android.gms.internal.measurement.zzkb,com.google.android.gms.internal.measurement.zzhl)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzjy: void zzb(java.util.List,com.google.android.gms.internal.measurement.zzkb,com.google.android.gms.internal.measurement.zzhl)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.internal.measurement.zzcq: com.google.android.gms.internal.measurement.zzec zzb()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.internal.measurement.zzdp: com.google.android.gms.internal.measurement.zzec zzb()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.android.gms.internal.measurement.zzdd: java.lang.String zza(android.net.Uri,java.lang.String,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzdh: void zza(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfc: void clear()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfc: java.lang.Object put(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfc: void putAll(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfc: java.lang.Object remove(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzey: boolean add(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzey: boolean addAll(java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzey: void clear()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzey: boolean remove(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzey: boolean removeAll(java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzey: boolean retainAll(java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzey: java.lang.Object[] zzb()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfb: void add(int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfb: boolean addAll(int,java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfb: java.lang.Object remove(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfb: java.lang.Object set(int,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfx: void remove()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfw: void add(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.internal.measurement.zzfw: void set(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NonNullDecl; method: <com.google.android.gms.internal.measurement.zzeb: java.lang.Object zza(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NonNullDecl; method: <com.google.android.gms.internal.measurement.zzeb: java.lang.Object zza(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzem: java.lang.Object zzb(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzem: java.lang.Object put(java.lang.Object,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzem: java.lang.Object remove(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzem: java.util.Map zzb()>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzev: java.lang.Object getKey()>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzev: java.lang.Object getValue()>
[main] WARN  firmproj.main.Main - not match type:Lorg/checkerframework/checker/nullness/compatqual/NullableDecl; method: <com.google.android.gms.internal.measurement.zzfp: java.lang.Object get(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.measurement.internal.zzii: void zza(android.app.Activity,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.measurement.internal.zzkl: java.lang.String zzz()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.measurement.internal.zzjr: android.util.Pair zzb(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.gms.measurement.internal.zzjr: java.lang.String zza(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.appbar.AppBarLayout: float getTargetElevation()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: void <init>(com.google.android.material.shape.ShapePathModel)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: void getPathForSize(int,int,android.graphics.Path)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: int getShadowElevation()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: com.google.android.material.shape.ShapePathModel getShapedViewModel()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: boolean isShadowEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: void setShadowElevation(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: void setShadowEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: void setShadowRadius(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.MaterialShapeDrawable: void setShapedViewModel(com.google.android.material.shape.ShapePathModel)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setAllCorners(com.google.android.material.shape.CornerTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setAllEdges(com.google.android.material.shape.EdgeTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setBottomEdge(com.google.android.material.shape.EdgeTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setBottomLeftCorner(com.google.android.material.shape.CornerTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setBottomRightCorner(com.google.android.material.shape.CornerTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setCornerTreatments(com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment,com.google.android.material.shape.CornerTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setEdgeTreatments(com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment,com.google.android.material.shape.EdgeTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setLeftEdge(com.google.android.material.shape.EdgeTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setRightEdge(com.google.android.material.shape.EdgeTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setTopEdge(com.google.android.material.shape.EdgeTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setTopLeftCorner(com.google.android.material.shape.CornerTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.ShapePathModel: void setTopRightCorner(com.google.android.material.shape.CornerTreatment)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.CornerTreatment: void getCornerPath(float,float,com.google.android.material.shape.ShapePath)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.EdgeTreatment: void getEdgePath(float,float,com.google.android.material.shape.ShapePath)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getContentRect(android.graphics.Rect)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.bottomnavigation.BottomNavigationMenuView: int getItemBackgroundRes()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.bottomnavigation.BottomNavigationView: int getItemBackgroundResource()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.bottomsheet.BottomSheetBehavior: void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: void <init>(android.os.Parcelable,int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.card.MaterialCardView: int getStrokeColor()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: boolean isCheckedIconEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: boolean isChipIconEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: boolean isCloseIconEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setChipCornerRadius(float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setChipTextResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: boolean isCheckedIconEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: boolean isChipIconEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: boolean isCloseIconEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabledResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setChipCornerRadius(float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setChipCornerRadiusResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabledResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabledResource(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipGroup: void setFlexWrap(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: boolean isPasswordVisibilityToggleEnabled()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void passwordVisibilityToggleRequested(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.CutCornerTreatment: void <init>(float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.shape.RoundedCornerTreatment: void <init>(float)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.tabs.TabLayout: void addOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.tabs.TabLayout: void removeOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorHeight(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.android.material.tabs.TabLayout: void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.FirebaseException: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.FirebaseApp: void setDataCollectionDefaultEnabled(boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.components.ComponentRuntime: void <init>(java.util.concurrent.Executor,java.lang.Iterable,com.google.firebase.components.Component[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Class,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.google.firebase.components.Component$Builder: void <init>(java.lang.Class,java.lang.Class[])>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nonnull; method: <com.google.firebase.platforminfo.LibraryVersion: java.lang.String getLibraryName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nonnull; method: <com.google.firebase.platforminfo.LibraryVersion: java.lang.String getVersion()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.components.ComponentDiscovery: java.util.List discover()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Ignore; method: <com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$BinaryImage: java.lang.String getUuid()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Field; method: <com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$BinaryImage: byte[] getUuidUtf8Bytes()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Ignore; method: <com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session: java.lang.String getIdentifier()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Field; method: <com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session: byte[] getIdentifierUtf8Bytes()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Ignore; method: <com.google.firebase.crashlytics.internal.model.CrashlyticsReport: com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Type getType()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MultipartBody: java.lang.String '-deprecated_boundary'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MultipartBody: java.util.List '-deprecated_parts'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MultipartBody: int '-deprecated_size'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MultipartBody: okhttp3.MediaType '-deprecated_type'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MultipartBody$Part: okhttp3.RequestBody '-deprecated_body'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.MultipartBody$Part: okhttp3.Headers '-deprecated_headers'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.crashlytics.internal.common.CommonUtils: javax.crypto.Cipher createCipher(int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.crashlytics.internal.common.CommonUtils: boolean isLoggingEnabled(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Ignore; method: <com.google.firebase.crashlytics.internal.model.AutoValue_CrashlyticsReport_Session: java.lang.String getIdentifier()>
[main] WARN  firmproj.main.Main - not match type:Lcom/google/firebase/encoders/annotations/Encodable$Ignore; method: <com.google.firebase.crashlytics.internal.model.AutoValue_CrashlyticsReport_Session_Event_Application_Execution_BinaryImage: java.lang.String getUuid()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.iid.FirebaseInstanceId: void deleteInstanceId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.iid.FirebaseInstanceId: void deleteToken(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String getId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.iid.FirebaseInstanceId: com.google.android.gms.tasks.Task getInstanceId()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String getToken()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String getToken(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.firebase.iid.FirebaseInstanceIdService: void onTokenRefresh()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nonnull; method: <com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getLibraryName()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nonnull; method: <com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getVersion()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.CommonUtils: javax.crypto.Cipher createCipher(int,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.common.CommonUtils: boolean isLoggingEnabled(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.services.persistence.PreferenceStoreImpl: void <init>(io.fabric.sdk.android.Kit)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable max(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable max(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double max(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double max(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float max(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float max(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxBy(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxBy(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxWith(java.lang.Iterable,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object maxWith(java.lang.Iterable,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable min(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable min(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double min(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Double min(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float min(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Float min(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minBy(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minBy(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minWith(java.lang.Iterable,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object minWith(java.lang.Iterable,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: int sumBy(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: int sumBy(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt___CollectionsKt: double sumByDouble(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.CollectionsKt___CollectionsKt: double sumByDouble(java.lang.Iterable,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt__MutableCollectionsKt: java.lang.Object remove(java.util.List,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.CollectionsKt__MutableCollectionsJVMKt: void sort(java.util.List,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxBy(java.util.Map,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxBy(java.util.Map,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxWith(java.util.Map,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry maxWith(java.util.Map,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minBy(java.util.Map,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minBy(java.util.Map,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minWith(java.util.Map,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.MapsKt___MapsKt: java.util.Map$Entry minWith(java.util.Map,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.jvm.JvmClassMappingKt: void getRuntimeClassOfKClassInstance$annotations(kotlin.reflect.KClass)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.KTypeProjection: kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection contravariant(kotlin.reflect.KType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection covariant(kotlin.reflect.KType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.KTypeProjection$Companion: kotlin.reflect.KTypeProjection invariant(kotlin.reflect.KType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable max(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable max(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double max(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double max(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float max(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float max(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxWith(kotlin.sequences.Sequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object maxWith(kotlin.sequences.Sequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable min(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Comparable min(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double min(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Double min(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float min(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Float min(kotlin.sequences.Sequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minWith(kotlin.sequences.Sequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: java.lang.Object minWith(kotlin.sequences.Sequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: int sumBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: int sumBy(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt___SequencesKt: double sumByDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.sequences.SequencesKt___SequencesKt: double sumByDouble(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt__SequenceBuilderKt: void SequenceBuilder$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt__SequenceBuilderKt: java.util.Iterator buildIterator(kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.sequences.SequencesKt__SequenceBuilderKt: kotlin.sequences.Sequence buildSequence(kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.CharsKt__CharJVMKt: char toLowerCase(char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.CharsKt__CharJVMKt: char toLowerCase(char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.CharsKt__CharJVMKt: char toTitleCase(char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.CharsKt__CharJVMKt: char toTitleCase(char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.CharsKt__CharJVMKt: char toUpperCase(char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.CharsKt__CharJVMKt: char toUpperCase(char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character max(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character max(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character maxBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character maxWith(java.lang.CharSequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character min(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character min(java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character minBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: java.lang.Character minWith(java.lang.CharSequence,java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: int sumBy(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt___StringsKt: double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt___StringsKt: double sumByDouble(java.lang.CharSequence,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsKt: java.lang.CharSequence subSequence(java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String capitalize(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String decapitalize(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(java.lang.String,java.util.Locale,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(java.lang.String,java.util.Locale,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String format(kotlin.jvm.internal.StringCompanionObject,java.util.Locale,java.lang.String,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toLowerCase(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringsJVMKt: java.lang.String toUpperCase(java.lang.String,java.util.Locale)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringNumberConversionsJVMKt: boolean toBoolean(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.text.StringsKt__StringNumberConversionsJVMKt: boolean toBoolean(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderKt: java.lang.StringBuilder append(java.lang.StringBuilder,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable,char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.Appendable appendln(java.lang.Appendable,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,byte)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,char)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.CharSequence)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuffer)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,java.lang.StringBuilder)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,short)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.text.StringsKt__StringBuilderJVMKt: java.lang.StringBuilder appendln(java.lang.StringBuilder,char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlinx.coroutines.Dispatchers: void getDefault$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlinx.coroutines.Dispatchers: void getIO$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlinx.coroutines.Dispatchers: void getMain$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlinx.coroutines.Dispatchers: void getUnconfined$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.Job$DefaultImpls: void cancel(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job,kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.SupervisorKt: kotlinx.coroutines.Job SupervisorJob(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.SendChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.SendChannel,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.channels.BroadcastChannel broadcastIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineStart)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowViaChannel(int,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flowWith(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorCollect(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.BroadcastChannel: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Level '-deprecated_level'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: boolean contains(double[],double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: boolean contains(double[],double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: boolean contains(float[],float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: boolean contains(float[],float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int indexOf(double[],double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int indexOf(double[],double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int indexOf(float[],float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int indexOf(float[],float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(double[],double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(double[],double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(float[],float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int lastIndexOf(float[],float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte max(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte max(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character max(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character max(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable max(java.lang.Comparable[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable max(java.lang.Comparable[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double max(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double max(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double max(java.lang.Double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double max(java.lang.Double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float max(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float max(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float max(java.lang.Float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float max(java.lang.Float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer max(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer max(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long max(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long max(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short max(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short max(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxBy(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxBy(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxBy(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxBy(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxBy(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxBy(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxBy(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxBy(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxBy(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxWith(boolean[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean maxWith(boolean[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxWith(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte maxWith(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxWith(char[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character maxWith(char[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxWith(double[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double maxWith(double[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxWith(float[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float maxWith(float[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxWith(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer maxWith(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxWith(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long maxWith(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxWith(java.lang.Object[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object maxWith(java.lang.Object[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxWith(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short maxWith(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte min(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte min(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character min(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character min(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable min(java.lang.Comparable[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Comparable min(java.lang.Comparable[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double min(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double min(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double min(java.lang.Double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double min(java.lang.Double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float min(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float min(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float min(java.lang.Float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float min(java.lang.Float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer min(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer min(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long min(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long min(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short min(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short min(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minBy(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minBy(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minBy(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minBy(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minBy(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minBy(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minBy(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minBy(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minBy(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minBy(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minBy(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minBy(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minBy(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minBy(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minWith(boolean[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Boolean minWith(boolean[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minWith(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Byte minWith(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minWith(char[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Character minWith(char[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minWith(double[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Double minWith(double[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minWith(float[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Float minWith(float[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minWith(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Integer minWith(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minWith(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Long minWith(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minWith(java.lang.Object[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Object minWith(java.lang.Object[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minWith(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: java.lang.Short minWith(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: int sumBy(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(char[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(double[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(float[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(java.lang.Object[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysKt: double sumByDouble(boolean[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(byte[],byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(byte[],byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(char[],char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(char[],char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(double[],double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(double[],double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(float[],float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(float[],float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(long[],long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(long[],long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(java.lang.Object[],java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(java.lang.Object[],java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(short[],short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(short[],short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(boolean[],boolean[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: boolean contentEquals(boolean[],boolean[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(boolean[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: int contentHashCode(boolean[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(char[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(double[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(float[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(boolean[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.String contentToString(boolean[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean byteRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,byte)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,short)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean doubleRangeContains(kotlin.ranges.ClosedRange,short)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,byte)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,byte)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,short)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean floatRangeContains(kotlin.ranges.ClosedRange,short)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean intRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean longRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.ranges.RangesKt___RangesKt: boolean shortRangeContains(kotlin.ranges.ClosedRange,float)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ForwardingSource: okio.Source '-deprecated_delegate'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.ForwardingSink: okio.Sink '-deprecated_delegate'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Challenge: java.util.Map '-deprecated_authParams'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Challenge: java.nio.charset.Charset '-deprecated_charset'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Challenge: java.lang.String '-deprecated_realm'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Challenge: java.lang.String '-deprecated_scheme'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: java.lang.String '-deprecated_domain'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: long '-deprecated_expiresAt'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: boolean '-deprecated_hostOnly'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: boolean '-deprecated_httpOnly'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: java.lang.String '-deprecated_name'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: java.lang.String '-deprecated_path'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: boolean '-deprecated_persistent'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: boolean '-deprecated_secure'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.Cookie: java.lang.String '-deprecated_value'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Cookie$Companion: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Cookie$Companion: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.FormBody: int '-deprecated_size'()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <okhttp3.internal.Util: java.util.List immutableListOf(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform get()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Sink appendingSink(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Sink blackhole()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.BufferedSink buffer(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.BufferedSource buffer(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Sink sink(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Sink sink(java.io.OutputStream)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Sink sink(java.net.Socket)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Source source(java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Source source(java.io.InputStream)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Source source(java.net.Socket)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedOkio': okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedUtf8': long size(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.'-DeprecatedUtf8': long size(java.lang.String,int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.GzipSink: java.util.zip.Deflater '-deprecated_deflater'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink$Companion: okio.HashingSink hmacSha1(okio.Sink,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink$Companion: okio.HashingSink hmacSha256(okio.Sink,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink$Companion: okio.HashingSink hmacSha512(okio.Sink,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink$Companion: okio.HashingSink md5(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink$Companion: okio.HashingSink sha1(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink$Companion: okio.HashingSink sha256(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink$Companion: okio.HashingSink sha512(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink: okio.HashingSink hmacSha1(okio.Sink,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink: okio.HashingSink hmacSha256(okio.Sink,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink: okio.HashingSink hmacSha512(okio.Sink,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink: okio.HashingSink md5(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink: okio.HashingSink sha1(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink: okio.HashingSink sha256(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSink: okio.HashingSink sha512(okio.Sink)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.HashingSink: okio.ByteString '-deprecated_hash'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource$Companion: okio.HashingSource hmacSha1(okio.Source,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource$Companion: okio.HashingSource hmacSha256(okio.Source,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource$Companion: okio.HashingSource hmacSha512(okio.Source,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource$Companion: okio.HashingSource md5(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource$Companion: okio.HashingSource sha1(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource$Companion: okio.HashingSource sha256(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource$Companion: okio.HashingSource sha512(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource: okio.HashingSource hmacSha1(okio.Source,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource: okio.HashingSource hmacSha256(okio.Source,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource: okio.HashingSource hmacSha512(okio.Source,okio.ByteString)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource: okio.HashingSource md5(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource: okio.HashingSource sha1(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource: okio.HashingSource sha256(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <okio.HashingSource: okio.HashingSource sha512(okio.Source)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.HashingSource: okio.ByteString '-deprecated_hash'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.Pipe: okio.Sink '-deprecated_sink'()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <okio.Pipe: okio.Source '-deprecated_source'()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.hamcrest.BaseMatcher: void _dont_implement_Matcher___instead_extend_BaseMatcher_()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.hamcrest.Matcher: void _dont_implement_Matcher___instead_extend_BaseMatcher_()>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AnyOf: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher[])>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.CombinableMatcher: org.hamcrest.core.CombinableMatcher$CombinableBothMatcher both(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.CombinableMatcher: org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher either(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(java.lang.Iterable)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.AllOf: org.hamcrest.Matcher allOf(org.hamcrest.Matcher[])>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.DescribedAs: org.hamcrest.Matcher describedAs(java.lang.String,org.hamcrest.Matcher,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.Every: org.hamcrest.Matcher everyItem(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.Is: org.hamcrest.Matcher isA(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsAnything: org.hamcrest.Matcher anything()>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsAnything: org.hamcrest.Matcher anything(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItems(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsCollectionContaining: org.hamcrest.Matcher hasItems(org.hamcrest.Matcher[])>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsInstanceOf: org.hamcrest.Matcher any(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsInstanceOf: org.hamcrest.Matcher instanceOf(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsNot: org.hamcrest.Matcher not(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsNot: org.hamcrest.Matcher not(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsNull: org.hamcrest.Matcher notNullValue()>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsNull: org.hamcrest.Matcher notNullValue(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsNull: org.hamcrest.Matcher nullValue()>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsNull: org.hamcrest.Matcher nullValue(java.lang.Class)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsSame: org.hamcrest.Matcher sameInstance(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.IsSame: org.hamcrest.Matcher theInstance(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.StringContains: org.hamcrest.Matcher containsString(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.StringEndsWith: org.hamcrest.Matcher endsWith(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.hamcrest.core.StringStartsWith: org.hamcrest.Matcher startsWith(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.Assert: void assertEquals(double,double)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.Assert: void assertEquals(java.lang.String,double,double)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.Assert: void assertEquals(java.lang.String,java.lang.Object[],java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.Assert: void assertEquals(java.lang.Object[],java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.AssumptionViolatedException: void <init>(java.lang.Object,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String,boolean,java.lang.Object,org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.runners.model.FrameworkMethod: boolean producesType(java.lang.reflect.Type)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.experimental.max.MaxCore: org.junit.experimental.max.MaxCore forFolder(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.JUnitSystem: void exit(int)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.runners.BlockJUnit4ClassRunner: void validateInstanceMethods(java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.runners.BlockJUnit4ClassRunner: org.junit.runners.model.Statement withPotentialTimeout(org.junit.runners.model.FrameworkMethod,java.lang.Object,org.junit.runners.model.Statement)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.RealSystem: void exit(int)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.junit.internal.matchers.StacktracePrintingMatcher: org.hamcrest.Matcher isException(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.junit.internal.matchers.StacktracePrintingMatcher: org.hamcrest.Matcher isThrowable(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.junit.internal.matchers.ThrowableCauseMatcher: org.hamcrest.Matcher hasCause(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Lorg/hamcrest/Factory; method: <org.junit.internal.matchers.ThrowableMessageMatcher: org.hamcrest.Matcher hasMessage(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.internal.runners.statements.FailOnTimeout: void <init>(org.junit.runners.model.Statement,long)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.core.CombinableMatcher$CombinableBothMatcher both(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher containsString(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher either(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher everyItem(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher hasItem(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher hasItem(org.hamcrest.Matcher)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher hasItems(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.matchers.JUnitMatchers: org.hamcrest.Matcher hasItems(org.hamcrest.Matcher[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.rules.ExpectedException: org.junit.rules.ExpectedException handleAssertionErrors()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.rules.ExpectedException: org.junit.rules.ExpectedException handleAssumptionViolatedExceptions()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.rules.TestWatcher: void skipped(org.junit.internal.AssumptionViolatedException,org.junit.runner.Description)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <org.junit.rules.Timeout: void <init>(int)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.DefaultCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.BuiltInConverters: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.BuiltInConverters: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.CompletableFutureCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.HttpException: retrofit2.Response response()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.HttpServiceMethod: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.HttpServiceMethod: java.lang.Object invoke(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameter(int,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.'annotation'.Annotation)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.OptionalConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Platform$Android: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Retrofit$1: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Utils: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.adapter.rxjava2.Result: java.lang.Throwable error()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.adapter.rxjava2.Result: retrofit2.Response response()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.converter.scalars.ScalarsConverterFactory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <retrofit2.converter.scalars.ScalarsConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.'annotation'.Annotation[],retrofit2.Retrofit)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <timber.log.Timber$Tree: boolean isLoggable(int)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/annotation/Nullable; method: <com.google.firebase.remoteconfig.internal.ConfigStorageClient: com.google.firebase.remoteconfig.internal.ConfigContainer read()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.JsonParser: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.JsonParser: com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.io.Reader)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.common.BitMatrix: java.lang.String toString(java.lang.String,java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.client.result.URIParsedResult: boolean isPossiblyMaliciousURI()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.client.result.CalendarParsedResult: java.util.Date getEnd()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.client.result.CalendarParsedResult: java.util.Date getStart()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.client.result.EmailAddressParsedResult: java.lang.String getEmailAddress()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.client.result.EmailAddressParsedResult: java.lang.String getMailtoURI()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.qrcode.detector.FinderPatternFinder: boolean handlePossibleCenter(int[],int,int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.oned.Code93Writer: int appendPattern(boolean[],int,int[],boolean)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.oned.rss.AbstractRSSReader: int count(int[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.pdf417.PDF417Common: int getBitCountSum(int[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.pdf417.PDF417ResultMetadata: int[] getOptionalData()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <com.google.zxing.pdf417.PDF417ResultMetadata: void setOptionalData(int[])>
[main] WARN  firmproj.main.Main - not match type:Landroidx/lifecycle/OnLifecycleEvent; method: <com.ledvance.smartplus.SmartPlusApplication: void onApplicationResume()>
[main] WARN  firmproj.main.Main - not match type:Landroidx/lifecycle/OnLifecycleEvent; method: <com.ledvance.smartplus.SmartPlusApplication: void onApplicationStop()>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <dagger.android.DispatchingAndroidInjector: void <init>(java.util.Map,java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/BindsInstance; method: <com.ledvance.smartplus.di.components.ApplicationComponent$Builder: com.ledvance.smartplus.di.components.ApplicationComponent$Builder application(android.app.Application)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Provides; method: <com.ledvance.smartplus.di.modules.AppModule: com.firebase.jobdispatcher.FirebaseJobDispatcher getFirebaseDispatcher(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Singleton; method: <com.ledvance.smartplus.di.modules.AppModule: com.firebase.jobdispatcher.FirebaseJobDispatcher getFirebaseDispatcher(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Provides; method: <com.ledvance.smartplus.di.modules.AppModule: android.content.Context provideContext(android.app.Application)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Singleton; method: <com.ledvance.smartplus.di.modules.AppModule: android.content.Context provideContext(android.app.Application)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Provides; method: <com.ledvance.smartplus.di.modules.AppModule: com.ledvance.smartplus.utils.AnalyticsManager providesAnalyticsManager(com.google.firebase.analytics.FirebaseAnalytics)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Singleton; method: <com.ledvance.smartplus.di.modules.AppModule: com.ledvance.smartplus.utils.AnalyticsManager providesAnalyticsManager(com.google.firebase.analytics.FirebaseAnalytics)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Provides; method: <com.ledvance.smartplus.di.modules.AppModule: com.google.firebase.analytics.FirebaseAnalytics providesFireBaseAnalyticsInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Singleton; method: <com.ledvance.smartplus.di.modules.AppModule: com.google.firebase.analytics.FirebaseAnalytics providesFireBaseAnalyticsInstance(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Provides; method: <com.ledvance.smartplus.di.modules.BluetoothModule: com.ledvance.smartplus.ble.BleWrapper providesBleWrapper(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Singleton; method: <com.ledvance.smartplus.di.modules.BluetoothModule: com.ledvance.smartplus.ble.BleWrapper providesBleWrapper(android.content.Context)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindProfileActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindProfileActivity$ProfileActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindProfileActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindProfileActivity$ProfileActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindProfileActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindProfileActivity$ProfileActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindWelcomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindWelcomeActivity$WelcomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindWelcomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindWelcomeActivity$WelcomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindWelcomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindWelcomeActivity$WelcomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindOnBoardingActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindOnBoardingActivity$OnBoardingActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindOnBoardingActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindOnBoardingActivity$OnBoardingActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindOnBoardingActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindOnBoardingActivity$OnBoardingActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindGoogleHomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindGoogleHomeActivity$GoogleHomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindGoogleHomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindGoogleHomeActivity$GoogleHomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindGoogleHomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindGoogleHomeActivity$GoogleHomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAppleHomeKitActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAppleHomeKitActivity$AppleHomeKitActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAppleHomeKitActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAppleHomeKitActivity$AppleHomeKitActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAppleHomeKitActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAppleHomeKitActivity$AppleHomeKitActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindMeshRepairActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindMeshRepairActivity$MeshRepairActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindMeshRepairActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindMeshRepairActivity$MeshRepairActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindMeshRepairActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindMeshRepairActivity$MeshRepairActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindPresetActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindPresetActivity$RoutinesActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindPresetActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindPresetActivity$RoutinesActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindPresetActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindPresetActivity$RoutinesActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineDetailActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineDetailActivity$RoutineDetailActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineDetailActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineDetailActivity$RoutineDetailActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineDetailActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineDetailActivity$RoutineDetailActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskActivity$RoutineTaskActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskActivity$RoutineTaskActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskActivity$RoutineTaskActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskDetailActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskDetailActivity$RoutineTaskDetailActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskDetailActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskDetailActivity$RoutineTaskDetailActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskDetailActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoutineTaskDetailActivity$RoutineTaskDetailActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindMoreSpeakerActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindMoreSpeakerActivity$MoreSpeakerActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindMoreSpeakerActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindMoreSpeakerActivity$MoreSpeakerActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindMoreSpeakerActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindMoreSpeakerActivity$MoreSpeakerActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindLoginFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindLoginFragment$LoginFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindLoginFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindLoginFragment$LoginFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindLoginFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindLoginFragment$LoginFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindCreateAccountFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindCreateAccountFragment$CreateAccountFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindCreateAccountFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindCreateAccountFragment$CreateAccountFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindCreateAccountFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindCreateAccountFragment$CreateAccountFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindVerificationFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindVerificationFragment$VerificationFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindVerificationFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindVerificationFragment$VerificationFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindVerificationFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindVerificationFragment$VerificationFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindForgetPasswordFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindForgetPasswordFragment$ForgetPasswordFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindForgetPasswordFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindForgetPasswordFragment$ForgetPasswordFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindForgetPasswordFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindForgetPasswordFragment$ForgetPasswordFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindMasterControlFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindMasterControlFragment$MasterControlFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindMasterControlFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindMasterControlFragment$MasterControlFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindMasterControlFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindMasterControlFragment$MasterControlFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindDeviceListFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindDeviceListFragment$DeviceListFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindDeviceListFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindDeviceListFragment$DeviceListFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.FragmentModule_BindDeviceListFragment: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.FragmentModule_BindDeviceListFragment$DeviceListFragmentSubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindHomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindHomeActivity$HomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindHomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindHomeActivity$HomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindHomeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindHomeActivity$HomeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoomActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoomActivity$RoomActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoomActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoomActivity$RoomActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindRoomActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindRoomActivity$RoomActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindNodeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindNodeActivity$NodeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindNodeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindNodeActivity$NodeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindNodeActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindNodeActivity$NodeActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAboutActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAboutActivity$AboutActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAboutActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAboutActivity$AboutActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAboutActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAboutActivity$AboutActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindLoginActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindLoginActivity$LoginActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindLoginActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindLoginActivity$LoginActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindLoginActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindLoginActivity$LoginActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindCreateRoomActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindCreateRoomActivity$CreateRoomActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindCreateRoomActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindCreateRoomActivity$CreateRoomActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindCreateRoomActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindCreateRoomActivity$CreateRoomActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAddDeviceActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAddDeviceActivity$AddDeviceActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAddDeviceActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAddDeviceActivity$AddDeviceActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindAddDeviceActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindAddDeviceActivity$AddDeviceActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/Binds; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindFirmwareUpdateActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindFirmwareUpdateActivity$FirmwareUpdateActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/ClassKey; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindFirmwareUpdateActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindFirmwareUpdateActivity$FirmwareUpdateActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/IntoMap; method: <com.ledvance.smartplus.di.modules.ActivityModule_BindFirmwareUpdateActivity: dagger.android.AndroidInjector$Factory bindAndroidInjectorFactory(com.ledvance.smartplus.di.modules.ActivityModule_BindFirmwareUpdateActivity$FirmwareUpdateActivitySubcomponent$Factory)>
[main] WARN  firmproj.main.Main - not match type:Ljavax/inject/Inject; method: <com.ledvance.smartplus.utils.PermissionManager: void <init>()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.about.AboutActivity bindAboutActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.adddevice.AddDeviceActivity bindAddDeviceActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.applehomekit.AppleHomeKitActivity bindAppleHomeKitActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.home.CreateRoomActivity bindCreateRoomActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.firmware.FirmwareUpdateActivity bindFirmwareUpdateActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.onboarding.googlehome.GoogleHomeActivity bindGoogleHomeActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.home.HomeActivity bindHomeActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.signin.LoginActivity bindLoginActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.home.MeshRepairActivity bindMeshRepairActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.onboarding.MoreSpeakerActivity bindMoreSpeakerActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.node.NodeActivity bindNodeActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.onboarding.OnBoardingActivity bindOnBoardingActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.preset.RoutinesActivity bindPresetActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.profile.ProfileActivity bindProfileActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.room.RoomActivity bindRoomActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.routine.RoutineDetailActivity bindRoutineDetailActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.routine.RoutineTaskActivity bindRoutineTaskActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.routine.RoutineTaskDetailActivity bindRoutineTaskDetailActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.ActivityModule: com.ledvance.smartplus.presentation.refactor_view.welcome.WelcomeActivity bindWelcomeActivity()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.FragmentModule: com.ledvance.smartplus.presentation.refactor_view.createaccount.CreateAccountFragment bindCreateAccountFragment()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.FragmentModule: com.ledvance.smartplus.presentation.refactor_view.room.DeviceListFragment bindDeviceListFragment()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.FragmentModule: com.ledvance.smartplus.presentation.refactor_view.forgetpassword.ForgetPasswordFragment bindForgetPasswordFragment()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.FragmentModule: com.ledvance.smartplus.presentation.refactor_view.signin.LoginFragment bindLoginFragment()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.FragmentModule: com.ledvance.smartplus.presentation.refactor_view.room.MasterControlFragment bindMasterControlFragment()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/android/ContributesAndroidInjector; method: <com.ledvance.smartplus.di.modules.FragmentModule: com.ledvance.smartplus.presentation.refactor_view.createaccount.VerificationFragment bindVerificationFragment()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.ledvance.smartplus.utils.ActivityStackManager: void finishActivities(java.lang.Class[])>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/SafeVarargs; method: <com.ledvance.smartplus.utils.ActivityStackManager: void finishAllActivities(java.lang.Class[])>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/Multibinds; method: <dagger.android.AndroidInjectionModule: java.util.Map classKeyedInjectorFactories()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/multibindings/Multibinds; method: <dagger.android.AndroidInjectionModule: java.util.Map stringKeyedInjectorFactories()>
[main] WARN  firmproj.main.Main - not match type:Ldagger/BindsInstance; method: <dagger.android.AndroidInjector$Builder: void seedInstance(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <dagger.internal.DelegateFactory: void setDelegatedProvider(javax.inject.Provider)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Fabric$Builder executorService(java.util.concurrent.ExecutorService)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.fabric.sdk.android.Fabric$Builder: io.fabric.sdk.android.Fabric$Builder handler(android.os.Handler)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.internal.functions.ObjectHelper: long requireNonNull(long,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.FlowableProcessor: io.reactivex.processors.FlowableProcessor toSerialized()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(int,java.lang.Runnable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.UnicastProcessor: io.reactivex.processors.UnicastProcessor create(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.PublishSubject: io.reactivex.subjects.PublishSubject create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int,java.lang.Runnable)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(int,java.lang.Runnable,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.UnicastSubject: io.reactivex.subjects.UnicastSubject create(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.AsyncProcessor: io.reactivex.processors.AsyncProcessor create()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.processors.AsyncProcessor: java.lang.Object[] getValues()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.processors.AsyncProcessor: java.lang.Object[] getValues(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.BehaviorProcessor: io.reactivex.processors.BehaviorProcessor create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.BehaviorProcessor: io.reactivex.processors.BehaviorProcessor createDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.processors.BehaviorProcessor: java.lang.Object[] getValues()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.processors.BehaviorProcessor: java.lang.Object[] getValues(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create(int,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.MulticastProcessor: io.reactivex.processors.MulticastProcessor create(boolean)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.PublishProcessor: io.reactivex.processors.PublishProcessor create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor create(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor createWithSize(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor createWithTime(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.processors.ReplayProcessor: io.reactivex.processors.ReplayProcessor createWithTimeAndSize(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.AsyncSubject: io.reactivex.subjects.AsyncSubject create()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.subjects.AsyncSubject: java.lang.Object[] getValues()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.subjects.AsyncSubject: java.lang.Object[] getValues(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.BehaviorSubject: io.reactivex.subjects.BehaviorSubject create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.BehaviorSubject: io.reactivex.subjects.BehaviorSubject createDefault(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.subjects.BehaviorSubject: java.lang.Object[] getValues()>
[main] WARN  firmproj.main.Main - not match type:Ljava/lang/Deprecated; method: <io.reactivex.subjects.BehaviorSubject: java.lang.Object[] getValues(java.lang.Object[])>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.CompletableSubject: io.reactivex.subjects.CompletableSubject create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.MaybeSubject: io.reactivex.subjects.MaybeSubject create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject create()>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject create(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject createWithSize(int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject createWithTime(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.ReplaySubject: io.reactivex.subjects.ReplaySubject createWithTimeAndSize(long,java.util.concurrent.TimeUnit,io.reactivex.Scheduler,int)>
[main] WARN  firmproj.main.Main - not match type:Lio/reactivex/annotations/CheckReturnValue; method: <io.reactivex.subjects.SingleSubject: io.reactivex.subjects.SingleSubject create()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.DeepRecursiveScope: java.lang.Void invoke(kotlin.DeepRecursiveFunction,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersion get()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-ctEhBpI(int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-ctEhBpI(int[],int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-kdPth3s(byte[],byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-kdPth3s(byte[],byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-mazbYpA(short[],short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-mazbYpA(short[],short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-us8wMrg(long[],long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: boolean contentEquals-us8wMrg(long[],long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int contentHashCode-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: java.lang.String contentToString-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt max--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt max--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte max-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte max-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong max-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong max-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort max-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort max-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxBy-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxBy-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxWith-XMRcp5o(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte maxWith-XMRcp5o(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxWith-YmdZ_VM(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt maxWith-YmdZ_VM(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxWith-eOHTfZs(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort maxWith-eOHTfZs(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxWith-zrEWJaI(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong maxWith-zrEWJaI(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt min--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt min--ajY-9A(int[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte min-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte min-GBYM_sE(byte[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong min-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong min-QwZRm1k(long[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort min-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort min-rL5Bavg(short[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minBy-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minBy-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minWith-XMRcp5o(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UByte minWith-XMRcp5o(byte[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minWith-YmdZ_VM(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UInt minWith-YmdZ_VM(int[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minWith-eOHTfZs(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.UShort minWith-eOHTfZs(short[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minWith-zrEWJaI(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: kotlin.ULong minWith-zrEWJaI(long[],java.util.Comparator)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: int sumBy-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-JOV_ifY(byte[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-MShoTSo(long[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-jgv0xPQ(int[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.collections.unsigned.UArraysKt___UArraysKt: double sumByDouble-xTcfx_M(short[],kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/DeprecatedSinceKotlin; method: <kotlin.io.ByteStreamsKt: byte[] readBytes(java.io.InputStream,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.io.FilesKt__UtilsKt: java.io.File createTempDir(java.lang.String,java.lang.String,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.io.FilesKt__UtilsKt: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.io.path.PathsKt__PathUtilsKt: void getInvariantSeparatorsPath$annotations(java.nio.file.Path)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.reflect.full.KClasses: void getDefaultType$annotations(kotlin.reflect.KClass)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind getById(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind$Companion: kotlin.reflect.jvm.internal.impl.load.kotlin.header.KotlinClassHeader$Kind getById(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature$Companion: kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature fromFieldNameAndDesc(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature$Companion: kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature fromJvmMemberSignature(kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmMemberSignature)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature$Companion: kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature fromMethod(kotlin.reflect.jvm.internal.impl.metadata.deserialization.NameResolver,kotlin.reflect.jvm.internal.impl.metadata.jvm.JvmProtoBuf$JvmMethodSignature)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature$Companion: kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature fromMethodNameAndDesc(java.lang.String,java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature$Companion: kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature fromMethodSignatureAndParameterIndex(kotlin.reflect.jvm.internal.impl.load.kotlin.MemberSignature,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.builtins.UnsignedTypes: boolean isUnsignedType(kotlin.reflect.jvm.internal.impl.types.KotlinType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.builtins.functions.BuiltInFictitiousFunctionClassFactory$Companion: kotlin.reflect.jvm.internal.impl.builtins.functions.FunctionClassDescriptor$Kind getFunctionalClassKind(java.lang.String,kotlin.reflect.jvm.internal.impl.name.FqName)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution: kotlin.reflect.jvm.internal.impl.types.TypeSubstitution create(kotlin.reflect.jvm.internal.impl.types.TypeConstructor,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution: kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution createByConstructorsMap(java.util.Map)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution$Companion: kotlin.reflect.jvm.internal.impl.types.TypeSubstitution create(kotlin.reflect.jvm.internal.impl.types.KotlinType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution$Companion: kotlin.reflect.jvm.internal.impl.types.TypeSubstitution create(kotlin.reflect.jvm.internal.impl.types.TypeConstructor,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution$Companion: kotlin.reflect.jvm.internal.impl.types.TypeConstructorSubstitution createByConstructorsMap(java.util.Map,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.descriptors.ConstUtil: boolean canBeUsedForConstVal(kotlin.reflect.jvm.internal.impl.types.KotlinType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl: kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl createWithDestructuringDeclarations(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor,int,kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations,kotlin.reflect.jvm.internal.impl.name.Name,kotlin.reflect.jvm.internal.impl.types.KotlinType,boolean,boolean,boolean,kotlin.reflect.jvm.internal.impl.types.KotlinType,kotlin.reflect.jvm.internal.impl.descriptors.SourceElement,kotlin.jvm.functions.Function0)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl$Companion: kotlin.reflect.jvm.internal.impl.descriptors.impl.ValueParameterDescriptorImpl createWithDestructuringDeclarations(kotlin.reflect.jvm.internal.impl.descriptors.CallableDescriptor,kotlin.reflect.jvm.internal.impl.descriptors.ValueParameterDescriptor,int,kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations,kotlin.reflect.jvm.internal.impl.name.Name,kotlin.reflect.jvm.internal.impl.types.KotlinType,boolean,boolean,boolean,kotlin.reflect.jvm.internal.impl.types.KotlinType,kotlin.reflect.jvm.internal.impl.descriptors.SourceElement,kotlin.jvm.functions.Function0)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature: kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor getOverriddenBuiltinFunctionWithErasedValueParametersInJava(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature: kotlin.reflect.jvm.internal.impl.load.java.BuiltinMethodsWithSpecialGenericSignature$SpecialSignatureInfo getSpecialSignatureInfo(kotlin.reflect.jvm.internal.impl.descriptors.CallableMemberDescriptor)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.ClassMapperLite: java.lang.String mapClass(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmProtoBufUtil: boolean isMovedFromInterfaceCompanion(kotlin.reflect.jvm.internal.impl.metadata.ProtoBuf$Property)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmProtoBufUtil: kotlin.Pair readClassDataFrom(byte[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmProtoBufUtil: kotlin.Pair readClassDataFrom(java.lang.String[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmProtoBufUtil: kotlin.Pair readFunctionDataFrom(java.lang.String[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmProtoBufUtil: kotlin.Pair readPackageDataFrom(byte[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.metadata.jvm.deserialization.JvmProtoBufUtil: kotlin.Pair readPackageDataFrom(java.lang.String[],java.lang.String[])>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.name.NameUtils: java.lang.String sanitizeAsJavaIdentifier(java.lang.String)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.utils.SmartSet: kotlin.reflect.jvm.internal.impl.utils.SmartSet create()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.utils.SmartSet$Companion: kotlin.reflect.jvm.internal.impl.utils.SmartSet create()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.utils.SmartSet$Companion: kotlin.reflect.jvm.internal.impl.utils.SmartSet create(java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.resolve.scopes.TypeIntersectionScope$Companion: kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope create(java.lang.String,java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.resolve.scopes.TypeIntersectionScope: kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope create(java.lang.String,java.util.Collection)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.DisjointKeysUnionTypeSubstitution$Companion: kotlin.reflect.jvm.internal.impl.types.TypeSubstitution create(kotlin.reflect.jvm.internal.impl.types.TypeSubstitution,kotlin.reflect.jvm.internal.impl.types.TypeSubstitution)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.DisjointKeysUnionTypeSubstitution: kotlin.reflect.jvm.internal.impl.types.TypeSubstitution create(kotlin.reflect.jvm.internal.impl.types.TypeSubstitution,kotlin.reflect.jvm.internal.impl.types.TypeSubstitution)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory: kotlin.reflect.jvm.internal.impl.types.SimpleType computeExpandedType(kotlin.reflect.jvm.internal.impl.descriptors.TypeAliasDescriptor,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory: kotlin.reflect.jvm.internal.impl.types.UnwrappedType flexibleType(kotlin.reflect.jvm.internal.impl.types.SimpleType,kotlin.reflect.jvm.internal.impl.types.SimpleType)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory: kotlin.reflect.jvm.internal.impl.types.SimpleType integerLiteralType(kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations,kotlin.reflect.jvm.internal.impl.resolve.constants.IntegerLiteralTypeConstructor,boolean)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory: kotlin.reflect.jvm.internal.impl.types.SimpleType simpleNotNullType(kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations,kotlin.reflect.jvm.internal.impl.descriptors.ClassDescriptor,java.util.List)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory: kotlin.reflect.jvm.internal.impl.types.SimpleType simpleType(kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations,kotlin.reflect.jvm.internal.impl.types.TypeConstructor,java.util.List,boolean,kotlin.reflect.jvm.internal.impl.types.checker.KotlinTypeRefiner)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory: kotlin.reflect.jvm.internal.impl.types.SimpleType simpleTypeWithNonTrivialMemberScope(kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations,kotlin.reflect.jvm.internal.impl.types.TypeConstructor,java.util.List,boolean,kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeFactory: kotlin.reflect.jvm.internal.impl.types.SimpleType simpleTypeWithNonTrivialMemberScope(kotlin.reflect.jvm.internal.impl.descriptors.annotations.Annotations,kotlin.reflect.jvm.internal.impl.types.TypeConstructor,java.util.List,boolean,kotlin.reflect.jvm.internal.impl.resolve.scopes.MemberScope,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: void getInDays$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: void getInHours$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: void getInMicroseconds$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: void getInMilliseconds$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: void getInMinutes$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: void getInNanoseconds$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: void getInSeconds$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: long toLongMilliseconds-impl(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.Duration: long toLongNanoseconds-impl(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getDays$annotations(double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getDays$annotations(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getDays$annotations(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getHours$annotations(double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getHours$annotations(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getHours$annotations(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMicroseconds$annotations(double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMicroseconds$annotations(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMicroseconds$annotations(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMilliseconds$annotations(double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMilliseconds$annotations(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMilliseconds$annotations(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMinutes$annotations(double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMinutes$annotations(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getMinutes$annotations(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getNanoseconds$annotations(double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getNanoseconds$annotations(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getNanoseconds$annotations(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getSeconds$annotations(double)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getSeconds$annotations(int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.DurationKt: void getSeconds$annotations(long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.TimeSourceKt: int compareTo(kotlin.time.TimeMark,kotlin.time.TimeMark)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlin.time.TimeSourceKt: long minus(kotlin.time.TimeMark,kotlin.time.TimeMark)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobSupport: void cancel()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobSupport: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobSupport: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.ChildJob$DefaultImpls: void cancel(kotlinx.coroutines.ChildJob)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.ChildJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.ChildJob,kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.CompletableDeferred$DefaultImpls: void cancel(kotlinx.coroutines.CompletableDeferred)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.CompletableDeferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.CompletableDeferred,kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.CompletableJob$DefaultImpls: void cancel(kotlinx.coroutines.CompletableJob)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.CompletableJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.CompletableJob,kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.Deferred$DefaultImpls: void cancel(kotlinx.coroutines.Deferred)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.Deferred$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.Deferred,kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.Job Job(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt__JobKt: boolean cancel(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlin.coroutines.CoroutineContext,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.JobKt__JobKt: void cancelChildren(kotlinx.coroutines.Job,java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.NonCancellable: void cancel()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.NonCancellable: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.NonCancellable: kotlinx.coroutines.Job plus(kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.ParentJob$DefaultImpls: void cancel(kotlinx.coroutines.ParentJob)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.ParentJob$DefaultImpls: kotlinx.coroutines.Job plus(kotlinx.coroutines.ParentJob,kotlinx.coroutines.Job)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.android.HandlerDispatcherKt: void getMain$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object next(kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.AbstractChannel: void cancel()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.AbstractChannel: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.AbstractChannel: java.lang.Object poll()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.AbstractChannel: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelCoroutine: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelCoroutine: boolean offer(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object poll()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelCoroutine: java.lang.Object receiveOrNull(kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ActorScope$DefaultImpls: void cancel(kotlinx.coroutines.channels.ActorScope)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ActorScope$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.ActorScope)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ActorScope$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ActorScope,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ArrayBroadcastChannel: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.BroadcastChannel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.BroadcastChannel,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.BroadcastCoroutine: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.BroadcastCoroutine: boolean offer(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.Channel$DefaultImpls: void cancel(kotlinx.coroutines.channels.Channel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.Channel$DefaultImpls: boolean offer(kotlinx.coroutines.channels.Channel,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.Channel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.Channel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelIterator$DefaultImpls: java.lang.Object next(kotlinx.coroutines.channels.ChannelIterator,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__ChannelsKt: void sendBlocking(kotlinx.coroutines.channels.SendChannel,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: kotlinx.coroutines.selects.SelectClause1 onReceiveOrNull(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object any(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object count(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel distinct(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel drop(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel dropWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAt(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object elementAtOrNull(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterIndexed(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel filterNot(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,java.util.Collection,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object filterNotNullTo(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.SendChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object first(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object firstOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel flatMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object indexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object last(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastIndexOf(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Object,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object lastOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapIndexedNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel mapNotNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object maxWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object minWith(kotlinx.coroutines.channels.ReceiveChannel,java.util.Comparator,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object none(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel requireNoNulls(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object single(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object singleOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel take(kotlinx.coroutines.channels.ReceiveChannel,int,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel takeWhile(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMap(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toMutableList(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: java.lang.Object toSet(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel withIndex(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ChannelsKt__DeprecatedKt: kotlinx.coroutines.channels.ReceiveChannel zip(kotlinx.coroutines.channels.ReceiveChannel,kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean cancel(java.lang.Throwable)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ConflatedBroadcastChannel: boolean offer(java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ProducerScope$DefaultImpls: boolean offer(kotlinx.coroutines.channels.ProducerScope,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void cancel(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: void getOnReceiveOrNull$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object poll(kotlinx.coroutines.channels.ReceiveChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.channels.ReceiveChannel$DefaultImpls: java.lang.Object receiveOrNull(kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/jvm/JvmStatic; method: <kotlinx.coroutines.debug.AgentPremain: void premain(java.lang.String,java.lang.instrument.Instrumentation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flowViaChannel(int,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.flow.Flow asFlow(kotlinx.coroutines.channels.BroadcastChannel)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__ChannelsKt: kotlinx.coroutines.channels.BroadcastChannel broadcastIn(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.CoroutineScope,kotlinx.coroutines.CoroutineStart)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow buffer(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__ContextKt: kotlinx.coroutines.flow.Flow flowWith(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__ErrorsKt: void ExceptionPredicate$annotations()>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow onErrorCollect(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__ErrorsKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.Flow,int,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow cache(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function5)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow combineLatest(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function6)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow compose(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow concatWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayEach(kotlinx.coroutines.flow.Flow,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow delayFlow(kotlinx.coroutines.flow.Flow,long)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow flatten(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: void forEach(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow merge(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow observeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResume(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorResumeNext(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow onErrorReturn(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publish(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow publishOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow replay(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanFold(kotlinx.coroutines.flow.Flow,java.lang.Object,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow scanReduce(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow skip(kotlinx.coroutines.flow.Flow,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,java.lang.Object)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow startWith(kotlinx.coroutines.flow.Flow,kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: void subscribe(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow subscribeOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.FlowKt__MigrationKt: kotlinx.coroutines.flow.Flow switchMap(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: void cancel(kotlinx.coroutines.flow.FlowCollector,java.util.concurrent.CancellationException)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow cancellable(kotlinx.coroutines.flow.SharedFlow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow 'catch'(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function3)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow conflate(kotlinx.coroutines.flow.StateFlow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: java.lang.Object count(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.StateFlow)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: void getCoroutineContext$annotations(kotlinx.coroutines.flow.FlowCollector)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: void isActive$annotations(kotlinx.coroutines.flow.FlowCollector)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retry(kotlinx.coroutines.flow.SharedFlow,long,kotlin.jvm.functions.Function2)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: kotlinx.coroutines.flow.Flow retryWhen(kotlinx.coroutines.flow.SharedFlow,kotlin.jvm.functions.Function4)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: java.lang.Object toList(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.flow.LintKt: java.lang.Object toSet(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.Continuation)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void <init>(int,int)>
[main] WARN  firmproj.main.Main - not match type:Lkotlin/Deprecated; method: <kotlinx.coroutines.test.TestCoroutineContextKt: void withTestContext(kotlinx.coroutines.test.TestCoroutineContext,kotlin.jvm.functions.Function1)>
[main] WARN  firmproj.main.Main - ---------------------
